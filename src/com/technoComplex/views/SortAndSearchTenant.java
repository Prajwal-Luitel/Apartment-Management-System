
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.technoComplex.views;

import com.technoComplex.controller.algorithms.BinarySearch;
import com.technoComplex.controller.algorithms.InsertionSort;
import com.technoComplex.controller.algorithms.SelectionSort;
import com.technoComplex.model.FlatModel;
import com.technoComplex.model.TenantModel;
import com.technoComplex.util.ValidationUtil;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author prajwal Luitel LMU Id 23048626
 */
public class SortAndSearchTenant extends javax.swing.JFrame {

    private List<FlatModel> flatList;
    private List<TenantModel> tenantList;
    private List<TenantModel> sortedTenantList;
    private final SelectionSort selectionSort;
    private final InsertionSort inserctionSort;
    private final BinarySearch binarySearch;
    private DefaultTableModel tableModel;
    private boolean isAscending;

    /**
     * Creates new form SortAndSearchTenant and populate tables with sorted
     * tenant data
     */
    public SortAndSearchTenant() {
        initComponents();
        isAscending = true;
        selectionSort = new SelectionSort();
        inserctionSort = new InsertionSort();
        binarySearch = new BinarySearch();
        initializeData();
        sortedTenantList = selectionSort.sortByTenantId(tenantList, isAscending);
        loadListToTable(sortedTenantList);
    }

    /**
     * Creates new form SortAndSearchTenant populate tables with sorted tenant
     * data obtained from other JFrame
     *
     * @param flatList flat data list from other JFrame
     * @param tenantList tenant data list from other JFrame
     */
    public SortAndSearchTenant(List<FlatModel> flatList, List<TenantModel> tenantList) {
        initComponents();
        this.flatList = new ArrayList<>(flatList);
        this.tenantList = new ArrayList<>(tenantList);
        isAscending = true;
        selectionSort = new SelectionSort();
        inserctionSort = new InsertionSort();
        binarySearch = new BinarySearch();
        initializeData();
        sortedTenantList = selectionSort.sortByTenantId(tenantList, isAscending);
        loadListToTable(sortedTenantList);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        scrlpnMangeTenantTable1 = new javax.swing.JScrollPane();
        tblMangeTenant1 = new javax.swing.JTable();
        pnlSortAndSearchTenantMain = new javax.swing.JPanel();
        pnlMenu = new javax.swing.JPanel();
        lblMenuTitleIcon = new javax.swing.JLabel();
        lblMenuTitle = new javax.swing.JLabel();
        lblMenuTitleBoder = new javax.swing.JLabel();
        pnlMenuHome = new javax.swing.JPanel();
        lblMenuHomeIcon = new javax.swing.JLabel();
        lblMenuHomeTitle = new javax.swing.JLabel();
        pnlMenuDashboard = new javax.swing.JPanel();
        lblMenuDashboardIcon = new javax.swing.JLabel();
        lblMenuDashboardTitle = new javax.swing.JLabel();
        lblMenuManageLeftBoder = new javax.swing.JLabel();
        lblMenuManageTitle = new javax.swing.JLabel();
        lblMenuManageRightBoder = new javax.swing.JLabel();
        pnlMenuManageFlat = new javax.swing.JPanel();
        lblMenuManageFlatIcon = new javax.swing.JLabel();
        lblMenuManageFlatTitle = new javax.swing.JLabel();
        pnlMenuManageCleaningLog = new javax.swing.JPanel();
        lblMenuManageCleaningLogIcon = new javax.swing.JLabel();
        lblMenuManageCleaningLog = new javax.swing.JLabel();
        pnlMenuManageTenant = new javax.swing.JPanel();
        lblMenuManageTenantIcon = new javax.swing.JLabel();
        lblMenuManageTenantTitle = new javax.swing.JLabel();
        lblMenuSortAndSearchLeftBoder = new javax.swing.JLabel();
        lblMenuSortAndSearchTitle = new javax.swing.JLabel();
        lblMenuSortAndSearchRightBoder = new javax.swing.JLabel();
        pnlMenuSortAndSearchFlat = new javax.swing.JPanel();
        lblMenuSortAndSearchFlatIcon = new javax.swing.JLabel();
        lblMenuSortAndSearchFlatTitle = new javax.swing.JLabel();
        pnlMenuSortAndSearchTenant = new javax.swing.JPanel();
        lblMenuSortAndSearchTenantIcon = new javax.swing.JLabel();
        lblMenuSortAndSearchTenantTitle = new javax.swing.JLabel();
        lblMenuSettingLeftBoder = new javax.swing.JLabel();
        lblMenuSettingTitle = new javax.swing.JLabel();
        lblMenuSettingRightBoder = new javax.swing.JLabel();
        pnlMenuSettingLogout = new javax.swing.JPanel();
        lblMenuSettingLogoutIcon = new javax.swing.JLabel();
        lblMenuSettingLogoutTitle = new javax.swing.JLabel();
        lblMenuBackgroundImage = new javax.swing.JLabel();
        lblLoginClose = new javax.swing.JLabel();
        btnAsceOrDesc = new javax.swing.JButton();
        cmbxTenantFields = new javax.swing.JComboBox<>();
        scrlpnSortedTenantTable = new javax.swing.JScrollPane();
        tblSortedTenant = new javax.swing.JTable();
        lblSortedTenantDetails = new javax.swing.JLabel();
        lblSearchIcon = new javax.swing.JLabel();
        txtfldSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        lblErrorSearch = new javax.swing.JLabel();

        jDialog1.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jDialog1.setBackground(new java.awt.Color(232, 245, 255));
        jDialog1.setMinimumSize(new java.awt.Dimension(970, 344));
        jDialog1.setPreferredSize(new java.awt.Dimension(970, 344));
        jDialog1.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        scrlpnMangeTenantTable1.setBackground(new java.awt.Color(0, 255, 204));
        scrlpnMangeTenantTable1.setForeground(new java.awt.Color(255, 255, 255));
        scrlpnMangeTenantTable1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        tblMangeTenant1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tenant Id", "Name", "Age", "Contact", "Join Date", "Flat Id", "Gender"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Short.class, java.lang.String.class, java.lang.Short.class, java.lang.String.class, java.lang.String.class, java.lang.Short.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMangeTenant1.getTableHeader().setReorderingAllowed(false);
        scrlpnMangeTenantTable1.setViewportView(tblMangeTenant1);

        jDialog1.getContentPane().add(scrlpnMangeTenantTable1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 870, 210));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1706, 912));
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlSortAndSearchTenantMain.setBackground(new java.awt.Color(232, 245, 255));
        pnlSortAndSearchTenantMain.setFont(new java.awt.Font("Poppins", 0, 24)); // NOI18N
        pnlSortAndSearchTenantMain.setMaximumSize(new java.awt.Dimension(1706, 912));
        pnlSortAndSearchTenantMain.setMinimumSize(new java.awt.Dimension(1706, 912));
        pnlSortAndSearchTenantMain.setPreferredSize(new java.awt.Dimension(1706, 912));
        pnlSortAndSearchTenantMain.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlMenu.setBackground(new java.awt.Color(255, 255, 255));
        pnlMenu.setMaximumSize(new java.awt.Dimension(371, 912));
        pnlMenu.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblMenuTitleIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/technoComplex/resources/image/icons/whiteTechnoLogo.png"))); // NOI18N
        pnlMenu.add(lblMenuTitleIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(-40, 10, 220, 150));

        lblMenuTitle.setFont(new java.awt.Font("Poppins", 2, 26)); // NOI18N
        lblMenuTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblMenuTitle.setText("Techno Complex");
        pnlMenu.add(lblMenuTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 30, 230, 80));

        lblMenuTitleBoder.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(255, 255, 255)));
        pnlMenu.add(lblMenuTitleBoder, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 370, 60));

        pnlMenuHome.setMaximumSize(new java.awt.Dimension(371, 60));
        pnlMenuHome.setMinimumSize(new java.awt.Dimension(371, 60));
        pnlMenuHome.setOpaque(false);
        pnlMenuHome.setPreferredSize(new java.awt.Dimension(371, 60));
        pnlMenuHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlMenuHomeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnlMenuHomeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlMenuHomeMouseExited(evt);
            }
        });
        pnlMenuHome.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblMenuHomeIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/technoComplex/resources/image/icons/home_16dp_FFFFFF_FILL0_wght400_GRAD0_opsz20.png"))); // NOI18N
        lblMenuHomeIcon.setText("jLabel11");
        pnlMenuHome.add(lblMenuHomeIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 0, 70, 50));

        lblMenuHomeTitle.setFont(new java.awt.Font("Poppins", 0, 28)); // NOI18N
        lblMenuHomeTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblMenuHomeTitle.setText("Home");
        pnlMenuHome.add(lblMenuHomeTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, -1, -1));

        pnlMenu.add(pnlMenuHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 180, -1, -1));

        pnlMenuDashboard.setMaximumSize(new java.awt.Dimension(371, 60));
        pnlMenuDashboard.setMinimumSize(new java.awt.Dimension(371, 60));
        pnlMenuDashboard.setOpaque(false);
        pnlMenuDashboard.setPreferredSize(new java.awt.Dimension(371, 60));
        pnlMenuDashboard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlMenuDashboardMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnlMenuDashboardMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlMenuDashboardMouseExited(evt);
            }
        });
        pnlMenuDashboard.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblMenuDashboardIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/technoComplex/resources/image/icons/dashboard_16dp_FFFFFF_FILL0_wght400_GRAD0_opsz20.png"))); // NOI18N
        pnlMenuDashboard.add(lblMenuDashboardIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 6, -1, 48));

        lblMenuDashboardTitle.setFont(new java.awt.Font("Poppins", 0, 28)); // NOI18N
        lblMenuDashboardTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblMenuDashboardTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMenuDashboardTitle.setText("Dashboard");
        pnlMenuDashboard.add(lblMenuDashboardTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 6, -1, -1));

        pnlMenu.add(pnlMenuDashboard, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 240, -1, -1));

        lblMenuManageLeftBoder.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(255, 255, 255)));
        pnlMenu.add(lblMenuManageLeftBoder, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 310, 130, 10));

        lblMenuManageTitle.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblMenuManageTitle.setForeground(new java.awt.Color(191, 191, 191));
        lblMenuManageTitle.setText("Manage");
        pnlMenu.add(lblMenuManageTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 310, 90, 20));

        lblMenuManageRightBoder.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(255, 255, 255)));
        pnlMenu.add(lblMenuManageRightBoder, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 310, 150, 10));

        pnlMenuManageFlat.setMaximumSize(new java.awt.Dimension(371, 60));
        pnlMenuManageFlat.setMinimumSize(new java.awt.Dimension(371, 60));
        pnlMenuManageFlat.setOpaque(false);
        pnlMenuManageFlat.setPreferredSize(new java.awt.Dimension(371, 60));
        pnlMenuManageFlat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlMenuManageFlatMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnlMenuManageFlatMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlMenuManageFlatMouseExited(evt);
            }
        });
        pnlMenuManageFlat.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblMenuManageFlatIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/technoComplex/resources/image/icons/room_preferences_16dp_FFFFFF_FILL0_wght400_GRAD-25_opsz20.png"))); // NOI18N
        pnlMenuManageFlat.add(lblMenuManageFlatIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 0, -1, 54));

        lblMenuManageFlatTitle.setFont(new java.awt.Font("Poppins", 0, 28)); // NOI18N
        lblMenuManageFlatTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblMenuManageFlatTitle.setText("Flat");
        pnlMenuManageFlat.add(lblMenuManageFlatTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 6, -1, -1));

        pnlMenu.add(pnlMenuManageFlat, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 340, -1, -1));

        pnlMenuManageCleaningLog.setMinimumSize(new java.awt.Dimension(371, 60));
        pnlMenuManageCleaningLog.setOpaque(false);
        pnlMenuManageCleaningLog.setPreferredSize(new java.awt.Dimension(371, 60));
        pnlMenuManageCleaningLog.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlMenuManageCleaningLogMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnlMenuManageCleaningLogMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlMenuManageCleaningLogMouseExited(evt);
            }
        });
        pnlMenuManageCleaningLog.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblMenuManageCleaningLogIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/technoComplex/resources/image/icons/cleaninglog.png"))); // NOI18N
        pnlMenuManageCleaningLog.add(lblMenuManageCleaningLogIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 0, -1, 60));

        lblMenuManageCleaningLog.setFont(new java.awt.Font("Poppins", 0, 28)); // NOI18N
        lblMenuManageCleaningLog.setForeground(new java.awt.Color(255, 255, 255));
        lblMenuManageCleaningLog.setText("Cleaning Log");
        pnlMenuManageCleaningLog.add(lblMenuManageCleaningLog, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 11, -1, -1));

        pnlMenu.add(pnlMenuManageCleaningLog, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 460, -1, -1));

        pnlMenuManageTenant.setMaximumSize(new java.awt.Dimension(371, 60));
        pnlMenuManageTenant.setMinimumSize(new java.awt.Dimension(371, 60));
        pnlMenuManageTenant.setOpaque(false);
        pnlMenuManageTenant.setPreferredSize(new java.awt.Dimension(371, 60));
        pnlMenuManageTenant.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlMenuManageTenantMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnlMenuManageTenantMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlMenuManageTenantMouseExited(evt);
            }
        });
        pnlMenuManageTenant.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblMenuManageTenantIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/technoComplex/resources/image/icons/manage_accounts_16dp_FFFFFF_FILL0_wght400_GRAD0_opsz20.png"))); // NOI18N
        pnlMenuManageTenant.add(lblMenuManageTenantIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 6, -1, 48));

        lblMenuManageTenantTitle.setFont(new java.awt.Font("Poppins", 0, 28)); // NOI18N
        lblMenuManageTenantTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblMenuManageTenantTitle.setText("Tenant");
        pnlMenuManageTenant.add(lblMenuManageTenantTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 11, -1, -1));

        pnlMenu.add(pnlMenuManageTenant, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 400, -1, -1));

        lblMenuSortAndSearchLeftBoder.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(255, 255, 255)));
        pnlMenu.add(lblMenuSortAndSearchLeftBoder, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 520, 100, 10));

        lblMenuSortAndSearchTitle.setFont(new java.awt.Font("Poppins", 0, 16)); // NOI18N
        lblMenuSortAndSearchTitle.setForeground(new java.awt.Color(191, 191, 191));
        lblMenuSortAndSearchTitle.setText("Sort and Search");
        pnlMenu.add(lblMenuSortAndSearchTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 520, 160, 20));

        lblMenuSortAndSearchRightBoder.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(255, 255, 255)));
        pnlMenu.add(lblMenuSortAndSearchRightBoder, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 520, 120, 10));

        pnlMenuSortAndSearchFlat.setMaximumSize(new java.awt.Dimension(371, 60));
        pnlMenuSortAndSearchFlat.setMinimumSize(new java.awt.Dimension(371, 60));
        pnlMenuSortAndSearchFlat.setOpaque(false);
        pnlMenuSortAndSearchFlat.setPreferredSize(new java.awt.Dimension(371, 60));
        pnlMenuSortAndSearchFlat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlMenuSortAndSearchFlatMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnlMenuSortAndSearchFlatMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlMenuSortAndSearchFlatMouseExited(evt);
            }
        });
        pnlMenuSortAndSearchFlat.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblMenuSortAndSearchFlatIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/technoComplex/resources/image/icons/manage_search_16dp_FFFFFF_FILL0_wght400_GRAD0_opsz20.png"))); // NOI18N
        pnlMenuSortAndSearchFlat.add(lblMenuSortAndSearchFlatIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 0, 58, 51));

        lblMenuSortAndSearchFlatTitle.setFont(new java.awt.Font("Poppins", 0, 28)); // NOI18N
        lblMenuSortAndSearchFlatTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblMenuSortAndSearchFlatTitle.setText("Flat");
        pnlMenuSortAndSearchFlat.add(lblMenuSortAndSearchFlatTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 8, -1, -1));

        pnlMenu.add(pnlMenuSortAndSearchFlat, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 550, -1, -1));

        pnlMenuSortAndSearchTenant.setBackground(new java.awt.Color(97,97,97,120));
        pnlMenuSortAndSearchTenant.setMaximumSize(new java.awt.Dimension(371, 60));
        pnlMenuSortAndSearchTenant.setMinimumSize(new java.awt.Dimension(371, 60));
        pnlMenuSortAndSearchTenant.setPreferredSize(new java.awt.Dimension(371, 60));
        pnlMenuSortAndSearchTenant.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblMenuSortAndSearchTenantIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/technoComplex/resources/image/icons/manage_search_16dp_FFFFFF_FILL0_wght400_GRAD0_opsz20.png"))); // NOI18N
        pnlMenuSortAndSearchTenant.add(lblMenuSortAndSearchTenantIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 0, 58, 51));

        lblMenuSortAndSearchTenantTitle.setFont(new java.awt.Font("Poppins", 0, 28)); // NOI18N
        lblMenuSortAndSearchTenantTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblMenuSortAndSearchTenantTitle.setText("Tenant");
        pnlMenuSortAndSearchTenant.add(lblMenuSortAndSearchTenantTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 8, -1, -1));

        pnlMenu.add(pnlMenuSortAndSearchTenant, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 610, -1, -1));

        lblMenuSettingLeftBoder.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(255, 255, 255)));
        pnlMenu.add(lblMenuSettingLeftBoder, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 670, 130, 10));

        lblMenuSettingTitle.setFont(new java.awt.Font("Poppins", 0, 16)); // NOI18N
        lblMenuSettingTitle.setForeground(new java.awt.Color(191, 191, 191));
        lblMenuSettingTitle.setText("Setting");
        pnlMenu.add(lblMenuSettingTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 670, 70, 20));

        lblMenuSettingRightBoder.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(255, 255, 255)));
        pnlMenu.add(lblMenuSettingRightBoder, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 670, 160, 10));

        pnlMenuSettingLogout.setMaximumSize(new java.awt.Dimension(371, 60));
        pnlMenuSettingLogout.setMinimumSize(new java.awt.Dimension(371, 60));
        pnlMenuSettingLogout.setOpaque(false);
        pnlMenuSettingLogout.setPreferredSize(new java.awt.Dimension(371, 60));
        pnlMenuSettingLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlMenuSettingLogoutMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnlMenuSettingLogoutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlMenuSettingLogoutMouseExited(evt);
            }
        });
        pnlMenuSettingLogout.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblMenuSettingLogoutIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/technoComplex/resources/image/icons/logout_16dp_FFFFFF_FILL0_wght400_GRAD0_opsz20.png"))); // NOI18N
        pnlMenuSettingLogout.add(lblMenuSettingLogoutIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, 58, 50));

        lblMenuSettingLogoutTitle.setFont(new java.awt.Font("Poppins", 0, 28)); // NOI18N
        lblMenuSettingLogoutTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblMenuSettingLogoutTitle.setText("Log Out");
        pnlMenuSettingLogout.add(lblMenuSettingLogoutTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 8, -1, -1));

        pnlMenu.add(pnlMenuSettingLogout, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 690, -1, -1));

        lblMenuBackgroundImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/technoComplex/resources/image/background/fd.png"))); // NOI18N
        pnlMenu.add(lblMenuBackgroundImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pnlSortAndSearchTenantMain.add(pnlMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        lblLoginClose.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblLoginClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/technoComplex/resources/image/icons/close.png"))); // NOI18N
        lblLoginClose.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblLoginClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblLoginCloseMouseClicked(evt);
            }
        });
        pnlSortAndSearchTenantMain.add(lblLoginClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(1650, 0, 50, 50));

        btnAsceOrDesc.setBackground(new java.awt.Color(102, 153, 255));
        btnAsceOrDesc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/technoComplex/resources/image/icons/ascending.png"))); // NOI18N
        btnAsceOrDesc.setText("Ascending");
        btnAsceOrDesc.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnAsceOrDesc.setPreferredSize(new java.awt.Dimension(150, 50));
        btnAsceOrDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAsceOrDescActionPerformed(evt);
            }
        });
        pnlSortAndSearchTenantMain.add(btnAsceOrDesc, new org.netbeans.lib.awtextra.AbsoluteConstraints(1470, 50, 140, -1));

        cmbxTenantFields.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        cmbxTenantFields.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TenantId", "Age", "Name" }));
        cmbxTenantFields.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbxTenantFieldsActionPerformed(evt);
            }
        });
        pnlSortAndSearchTenantMain.add(cmbxTenantFields, new org.netbeans.lib.awtextra.AbsoluteConstraints(1280, 50, 150, 50));

        scrlpnSortedTenantTable.setBackground(new java.awt.Color(0, 255, 204));
        scrlpnSortedTenantTable.setForeground(new java.awt.Color(255, 255, 255));
        scrlpnSortedTenantTable.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        tblSortedTenant.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tenant Id", "Name", "Age", "Contact", "Join Date", "Flat Id", "Gender"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Short.class, java.lang.String.class, java.lang.Short.class, java.lang.String.class, java.lang.String.class, java.lang.Short.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSortedTenant.setRowHeight(30);
        tblSortedTenant.getTableHeader().setReorderingAllowed(false);
        scrlpnSortedTenantTable.setViewportView(tblSortedTenant);
        if (tblSortedTenant.getColumnModel().getColumnCount() > 0) {
            tblSortedTenant.getColumnModel().getColumn(0).setResizable(false);
            tblSortedTenant.getColumnModel().getColumn(1).setResizable(false);
            tblSortedTenant.getColumnModel().getColumn(2).setResizable(false);
            tblSortedTenant.getColumnModel().getColumn(3).setResizable(false);
            tblSortedTenant.getColumnModel().getColumn(4).setResizable(false);
            tblSortedTenant.getColumnModel().getColumn(5).setResizable(false);
            tblSortedTenant.getColumnModel().getColumn(6).setResizable(false);
        }

        pnlSortAndSearchTenantMain.add(scrlpnSortedTenantTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 230, 1210, 360));

        lblSortedTenantDetails.setFont(new java.awt.Font("Poppins", 0, 36)); // NOI18N
        lblSortedTenantDetails.setForeground(new java.awt.Color(102, 153, 255));
        lblSortedTenantDetails.setText("Sorted Tenant Details");
        pnlSortAndSearchTenantMain.add(lblSortedTenantDetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 170, 400, 60));

        lblSearchIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/technoComplex/resources/image/icons/search.png"))); // NOI18N
        lblSearchIcon.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pnlSortAndSearchTenantMain.add(lblSearchIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 40, 50, 60));

        txtfldSearch.setFont(new java.awt.Font("Poppins", 0, 24)); // NOI18N
        txtfldSearch.setForeground(new java.awt.Color(169, 169, 172));
        txtfldSearch.setText("Search");
        txtfldSearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtfldSearchFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtfldSearchFocusLost(evt);
            }
        });
        pnlSortAndSearchTenantMain.add(txtfldSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 40, 530, 60));

        btnSearch.setBackground(new java.awt.Color(102, 153, 255));
        btnSearch.setText("Search");
        btnSearch.setPreferredSize(new java.awt.Dimension(150, 50));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        pnlSortAndSearchTenantMain.add(btnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 40, -1, 60));

        lblErrorSearch.setForeground(new java.awt.Color(255, 0, 0));
        pnlSortAndSearchTenantMain.add(lblErrorSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 20, -1, -1));

        getContentPane().add(pnlSortAndSearchTenantMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents
 /**
     * Turn the background light and show underline for label when mouse entered
     * the menu item i.e hover effect
     *
     * @param menuPanel the menu item panel in which light background (hover
     * effect) is to be shown
     * @param menuPanelLabel the menu title label in which underline label
     * (hover effect) is to be shown
     */
    private void mouseEnter(JPanel menuPanel, JLabel menuPanelLabel) {
        menuPanel.setBackground(null);
        menuPanel.setBackground(new Color(192, 213, 255));
        menuPanel.setOpaque(true);
        menuPanelLabel.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
    }

    /**
     * Remove the hover effect when mouse leave the menu item
     *
     * @param menuPanel the menu item panel to turn it back to normal
     * @param menuPanelLabel the menu title label to turn it back to normal
     *
     */
    private void mouseExit(JPanel menuPanel, JLabel menuPanelLabel) {
        menuPanel.setBackground(null);
        menuPanel.setOpaque(false);
        menuPanelLabel.setBorder(null);
    }

    private void pnlMenuHomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuHomeMouseClicked
        new Home(flatList, tenantList).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_pnlMenuHomeMouseClicked

    private void pnlMenuHomeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuHomeMouseEntered
        mouseEnter(pnlMenuHome, lblMenuHomeTitle);
    }//GEN-LAST:event_pnlMenuHomeMouseEntered

    private void pnlMenuHomeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuHomeMouseExited
        mouseExit(pnlMenuHome, lblMenuHomeTitle);
    }//GEN-LAST:event_pnlMenuHomeMouseExited

    private void pnlMenuDashboardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuDashboardMouseClicked
        new Dashboard(flatList, tenantList).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_pnlMenuDashboardMouseClicked

    private void pnlMenuDashboardMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuDashboardMouseEntered
        mouseEnter(pnlMenuDashboard, lblMenuDashboardTitle);
    }//GEN-LAST:event_pnlMenuDashboardMouseEntered

    private void pnlMenuDashboardMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuDashboardMouseExited
        mouseExit(pnlMenuDashboard, lblMenuDashboardTitle);
    }//GEN-LAST:event_pnlMenuDashboardMouseExited

    private void pnlMenuManageFlatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuManageFlatMouseClicked
        new ManageFlat(flatList, tenantList).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_pnlMenuManageFlatMouseClicked

    private void pnlMenuManageFlatMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuManageFlatMouseEntered
        mouseEnter(pnlMenuManageFlat, lblMenuManageFlatTitle);
    }//GEN-LAST:event_pnlMenuManageFlatMouseEntered

    private void pnlMenuManageFlatMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuManageFlatMouseExited
        mouseExit(pnlMenuManageFlat, lblMenuManageFlatTitle);
    }//GEN-LAST:event_pnlMenuManageFlatMouseExited

    private void pnlMenuManageTenantMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuManageTenantMouseClicked
        new ManageTenant(flatList, tenantList).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_pnlMenuManageTenantMouseClicked

    private void pnlMenuManageTenantMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuManageTenantMouseEntered
        mouseEnter(pnlMenuManageTenant, lblMenuManageTenantTitle);
    }//GEN-LAST:event_pnlMenuManageTenantMouseEntered

    private void pnlMenuManageTenantMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuManageTenantMouseExited
        mouseExit(pnlMenuManageTenant, lblMenuManageTenantTitle);
    }//GEN-LAST:event_pnlMenuManageTenantMouseExited

    private void pnlMenuSettingLogoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuSettingLogoutMouseClicked
        new LogIn().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_pnlMenuSettingLogoutMouseClicked

    private void pnlMenuSettingLogoutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuSettingLogoutMouseEntered
        mouseEnter(pnlMenuSettingLogout, lblMenuSettingLogoutTitle);
    }//GEN-LAST:event_pnlMenuSettingLogoutMouseEntered

    private void pnlMenuSettingLogoutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuSettingLogoutMouseExited
        mouseExit(pnlMenuSettingLogout, lblMenuSettingLogoutTitle);
    }//GEN-LAST:event_pnlMenuSettingLogoutMouseExited

    private void pnlMenuSortAndSearchFlatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuSortAndSearchFlatMouseClicked
        new SortAndSearchFlat(flatList, tenantList).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_pnlMenuSortAndSearchFlatMouseClicked

    private void pnlMenuSortAndSearchFlatMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuSortAndSearchFlatMouseEntered
        mouseEnter(pnlMenuSortAndSearchFlat, lblMenuSortAndSearchFlatTitle);
    }//GEN-LAST:event_pnlMenuSortAndSearchFlatMouseEntered

    private void pnlMenuSortAndSearchFlatMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuSortAndSearchFlatMouseExited
        mouseExit(pnlMenuSortAndSearchFlat, lblMenuSortAndSearchFlatTitle);
    }//GEN-LAST:event_pnlMenuSortAndSearchFlatMouseExited

    private void lblLoginCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLoginCloseMouseClicked
        int closeSystem = JOptionPane.showConfirmDialog(pnlSortAndSearchTenantMain, "Do you want to close the \nTecnho Management System", "Close System", JOptionPane.YES_NO_OPTION);
        if (closeSystem == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_lblLoginCloseMouseClicked

    /**
     * Populate the flat data in flat list
     */
    private void initialFlatData() {
        flatList = new ArrayList<>();
        flatList.add(new FlatModel((short) 106, 120000, 900, (byte) 3, (byte) 3, (byte) 2, "Furnished", "Not Available"));
        flatList.add(new FlatModel((short) 107, 450000, 1800, (byte) 4, (byte) 5, (byte) 3, "Unfurnished", "Available"));
        flatList.add(new FlatModel((short) 108, 60000, 1200, (byte) 2, (byte) 1, (byte) 1, "Furnished", "Available"));
        flatList.add(new FlatModel((short) 101, 25000, 500, (byte) 1, (byte) 1, (byte) 1, "Furnished", "Not Available"));
        flatList.add(new FlatModel((short) 102, 150000, 800, (byte) 2, (byte) 2, (byte) 1, "Unfurnished", "Not Available"));
        flatList.add(new FlatModel((short) 103, 300000, 1200, (byte) 3, (byte) 4, (byte) 2, "Furnished", "Not Available"));
        flatList.add(new FlatModel((short) 109, 200000, 1500, (byte) 2, (byte) 4, (byte) 2, "Unfurnished", "Available"));
        flatList.add(new FlatModel((short) 110, 350000, 2200, (byte) 4, (byte) 6, (byte) 3, "Furnished", "Available"));
        flatList.add(new FlatModel((short) 100, 25000, 500, (byte) 1, (byte) 1, (byte) 1, "Furnished", "Not Available"));
        flatList.add(new FlatModel((short) 104, 500000, 2000, (byte) 4, (byte) 5, (byte) 3, "Furnished", "Not Available"));
        flatList.add(new FlatModel((short) 105, 70000, 600, (byte) 2, (byte) 1, (byte) 1, "Unfurnished", "Not Available"));
    }

    /**
     * Populate the tenant data in tenant list
     */
    private void initialTenantData() {
        tenantList = new ArrayList<>();
        tenantList.add(new TenantModel((short) 102, "Sita Pokherel", (short) 30, "9823456781", "2020-06-10", (short) 100, "Female"));
        tenantList.add(new TenantModel((short) 103, "Hari Khadka", (short) 40, "9834567892", "2018-08-20", (short) 101, "Male"));
        tenantList.add(new TenantModel((short) 104, "Gita Thapa", (short) 22, "9845678903", "2021-01-25", (short) 102, "Female"));
        tenantList.add(new TenantModel((short) 105, "Krishna Lama", (short) 35, "9856789014", "2022-11-05", (short) 103, "Male"));
        tenantList.add(new TenantModel((short) 107, "Bikash Kafle", (short) 45, "9878901236", "2024-07-18", (short) 104, "Male"));
        tenantList.add(new TenantModel((short) 108, "Saraswati Rai", (short) 32, "9889012347", "2020-04-12", (short) 105, "Female"));
        tenantList.add(new TenantModel((short) 110, "Mina Dahal", (short) 27, "9801234569", "2018-12-10", (short) 106, "Female"));
//        tenantList.add(new TenantModel((short) 109, "Prakash Karki", (short) 50, "9890123458", "2023-02-28", (short) 109, "Male"));
//        tenantList.add(new TenantModel((short) 101, "Ram Shrestha", (short) 25, "9812345670", "2019-03-15", (short) 101, "Male"));
//        tenantList.add(new TenantModel((short) 106, "Rita Koirala", (short) 28, "9867890125", "2023-09-30", (short) 106, "Female"));
    }

    /**
     * Populates the List with the stored default flat and tenant data.
     * Initialize the List with default value only when the list is null
     */
    private void initializeData() {
        try {
            flatList.isEmpty();
        } catch (NullPointerException ne) {
            initialFlatData();
        }

        try {
            tenantList.isEmpty();
        } catch (NullPointerException ne) {
            initialTenantData();
        }
    }

    /**
     * Populates the JTable with the current list of tenant records. Clears
     * existing rows in the table model before adding new data.
     *
     * @param tenantList load the data to table
     */
    private void loadListToTable(List<TenantModel> tenantList) {
        DefaultTableModel model = (DefaultTableModel) tblSortedTenant.getModel();
        // Clear existing rows if needed
        model.setRowCount(0);
        // Populate the table with tenant data
        for (TenantModel tenant : tenantList) {
            model.addRow(new Object[]{
                tenant.getTenantId(), tenant.getName(), tenant.getAge(), tenant.getContact(),
                tenant.getJoinDate(), tenant.getFlatId(), tenant.getGender()
            });
        }
    }

    /**
     * Event handler for the AsecOrDesc button action. sort the list according
     * to the icon in the button and the icon is changed after sort
     *
     * @param evt the ActionEvent triggered by the AsecOrDesc button
     */
    private void btnAsceOrDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAsceOrDescActionPerformed
        // TODO add your handling code here:
        if (isAscending) {
            btnAsceOrDesc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/technoComplex/resources/image/icons/descending.png"))); // NOI18N
            btnAsceOrDesc.setText("Descending");
            isAscending = false;

        } else {
            btnAsceOrDesc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/technoComplex/resources/image/icons/ascending.png"))); // NOI18N
            btnAsceOrDesc.setText("Ascending");
            isAscending = true;
        }
        if (cmbxTenantFields.getSelectedIndex() == 0) {
            sortedTenantList = selectionSort.sortByTenantId(tenantList, isAscending);
        } else {
            sortedTenantList = inserctionSort.sort(tenantList, cmbxTenantFields.getSelectedIndex(), isAscending);
        }
        loadListToTable(sortedTenantList);
    }//GEN-LAST:event_btnAsceOrDescActionPerformed

    /**
     * Event handler for the TenantFields COmboBox action. sort the list
     * according to the field in the ComboBox
     *
     * @param evt the ActionEvent triggered by the FlatFields COmboBox
     */
    private void cmbxTenantFieldsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbxTenantFieldsActionPerformed
        // TODO add your handling code here:
        if (cmbxTenantFields.getSelectedIndex() == 0) {
            sortedTenantList = selectionSort.sortByTenantId(tenantList, isAscending);
        } else {
            sortedTenantList = inserctionSort.sort(tenantList, cmbxTenantFields.getSelectedIndex(), isAscending);
        }

        loadListToTable(sortedTenantList);
    }//GEN-LAST:event_cmbxTenantFieldsActionPerformed

    /**
     * Event handler for the Search TextField focus gained. when user click on
     * search the empty space is set for writing and foreground changes to black
     *
     * @param evt the FocusEvent triggered by the Search TextField
     */
    private void txtfldSearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfldSearchFocusGained
        // TODO add your handling code here:
        if (txtfldSearch.getText().equals("Search")) { // User has not entered text yet
            txtfldSearch.setForeground(Color.black);
            txtfldSearch.setText("");
        }
    }//GEN-LAST:event_txtfldSearchFocusGained

    /**
     * Event handler for the Search TextField focus lost. when user leave the
     * field empty field text is set to search in grey color
     *
     * @param evt the FocusEvent triggered by the Search TextField
     */
    private void txtfldSearchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtfldSearchFocusLost
        // TODO add your handling code here:
        if (txtfldSearch.getText().equals("")) {// User did not enter text
            txtfldSearch.setForeground(new java.awt.Color(169, 169, 172)); // placeholder color
            txtfldSearch.setText("Search");
        }
    }//GEN-LAST:event_txtfldSearchFocusLost

    /**
     * Event handler for the Search Button action. Validate the field then
     * search for the input name in list if multiple are found show them in
     * table in JDialog
     *
     * @param evt the ActionEvent triggered by the AsecOrDesc button
     */
    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        //search textfield validate
        if (txtfldSearch.getText().isEmpty() || txtfldSearch.getText().equals("Search")) {
            txtfldSearch.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0), 2));
            lblErrorSearch.setText("Enter name to search");
            return;
        } else if (!ValidationUtil.isValidName(txtfldSearch.getText().trim())) {
            txtfldSearch.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0), 2));
            lblErrorSearch.setText("Enter valid name");
            return;
        } else {
            txtfldSearch.setBorder(null);
            lblErrorSearch.setText(null);
        }
        // clear the already existing table data in JDialog
        clearTableData(tblMangeTenant1);

        sortedTenantList = inserctionSort.sort(tenantList, 2, true);
        // index of multiple matched data
        List<Integer> multiplevalue = binarySearch.searchByName(sortedTenantList, txtfldSearch.getText());
        if (multiplevalue.isEmpty()) {
            // name doesn't exist
            JOptionPane.showMessageDialog(this, "The name doesn't exist\ntry another name", "No Result Found", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // loading the matched value to Table in JDialog
            for (int i = 0; i < multiplevalue.size(); i++) {
                addModelToTable(sortedTenantList.get(multiplevalue.get(i)));
            }
            jDialog1.setVisible(true);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void pnlMenuManageCleaningLogMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuManageCleaningLogMouseClicked
        new CleaningLog(flatList, tenantList).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_pnlMenuManageCleaningLogMouseClicked

    private void pnlMenuManageCleaningLogMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuManageCleaningLogMouseEntered
        mouseEnter(pnlMenuManageCleaningLog, lblMenuManageCleaningLog);
    }//GEN-LAST:event_pnlMenuManageCleaningLogMouseEntered

    private void pnlMenuManageCleaningLogMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuManageCleaningLogMouseExited
        mouseExit(pnlMenuManageCleaningLog, lblMenuManageCleaningLog);
    }//GEN-LAST:event_pnlMenuManageCleaningLogMouseExited

    /**
     * Reset the table data in JDialog
     *
     * @param table which is to be reset
     */
    private void clearTableData(JTable table) {
        tableModel = (DefaultTableModel) tblMangeTenant1.getModel();
        int size = tableModel.getRowCount() - 1;
        while (size >= 0) {
            tableModel.removeRow(size--);
        }
    }

    /**
     * Add the tenant data to the table
     *
     * @param tenant whose data is to be added in table
     */
    private void addModelToTable(TenantModel tenant) {
        tableModel = (DefaultTableModel) tblMangeTenant1.getModel();
        tableModel.addRow(new Object[]{tenant.getTenantId(), tenant.getName(), tenant.getAge(), tenant.getContact(),
            tenant.getJoinDate(), tenant.getFlatId(), tenant.getGender()});
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SortAndSearchTenant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SortAndSearchTenant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SortAndSearchTenant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SortAndSearchTenant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SortAndSearchTenant().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAsceOrDesc;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<String> cmbxTenantFields;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel lblErrorSearch;
    private javax.swing.JLabel lblLoginClose;
    private javax.swing.JLabel lblMenuBackgroundImage;
    private javax.swing.JLabel lblMenuDashboardIcon;
    private javax.swing.JLabel lblMenuDashboardTitle;
    private javax.swing.JLabel lblMenuHomeIcon;
    private javax.swing.JLabel lblMenuHomeTitle;
    private javax.swing.JLabel lblMenuManageCleaningLog;
    private javax.swing.JLabel lblMenuManageCleaningLogIcon;
    private javax.swing.JLabel lblMenuManageFlatIcon;
    private javax.swing.JLabel lblMenuManageFlatTitle;
    private javax.swing.JLabel lblMenuManageLeftBoder;
    private javax.swing.JLabel lblMenuManageRightBoder;
    private javax.swing.JLabel lblMenuManageTenantIcon;
    private javax.swing.JLabel lblMenuManageTenantTitle;
    private javax.swing.JLabel lblMenuManageTitle;
    private javax.swing.JLabel lblMenuSettingLeftBoder;
    private javax.swing.JLabel lblMenuSettingLogoutIcon;
    private javax.swing.JLabel lblMenuSettingLogoutTitle;
    private javax.swing.JLabel lblMenuSettingRightBoder;
    private javax.swing.JLabel lblMenuSettingTitle;
    private javax.swing.JLabel lblMenuSortAndSearchFlatIcon;
    private javax.swing.JLabel lblMenuSortAndSearchFlatTitle;
    private javax.swing.JLabel lblMenuSortAndSearchLeftBoder;
    private javax.swing.JLabel lblMenuSortAndSearchRightBoder;
    private javax.swing.JLabel lblMenuSortAndSearchTenantIcon;
    private javax.swing.JLabel lblMenuSortAndSearchTenantTitle;
    private javax.swing.JLabel lblMenuSortAndSearchTitle;
    private javax.swing.JLabel lblMenuTitle;
    private javax.swing.JLabel lblMenuTitleBoder;
    private javax.swing.JLabel lblMenuTitleIcon;
    private javax.swing.JLabel lblSearchIcon;
    private javax.swing.JLabel lblSortedTenantDetails;
    private javax.swing.JPanel pnlMenu;
    private javax.swing.JPanel pnlMenuDashboard;
    private javax.swing.JPanel pnlMenuHome;
    private javax.swing.JPanel pnlMenuManageCleaningLog;
    private javax.swing.JPanel pnlMenuManageFlat;
    private javax.swing.JPanel pnlMenuManageTenant;
    private javax.swing.JPanel pnlMenuSettingLogout;
    private javax.swing.JPanel pnlMenuSortAndSearchFlat;
    private javax.swing.JPanel pnlMenuSortAndSearchTenant;
    private javax.swing.JPanel pnlSortAndSearchTenantMain;
    private javax.swing.JScrollPane scrlpnMangeTenantTable1;
    private javax.swing.JScrollPane scrlpnSortedTenantTable;
    private javax.swing.JTable tblMangeTenant1;
    private javax.swing.JTable tblSortedTenant;
    private javax.swing.JTextField txtfldSearch;
    // End of variables declaration//GEN-END:variables
}
