/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.technoComplex.views;

import com.technoComplex.model.TenantModel;
import com.technoComplex.util.ValidationUtil;
import java.awt.Color;
import java.text.SimpleDateFormat;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author prajwal Luitel LMU Id 23048626
 */
public class ManageTenant extends javax.swing.JFrame {

    private List<TenantModel> tenantList;

    /**
     * Creates new form ManageTenant and add the table data initially
     */
    public ManageTenant() {
        initComponents();
        initializeData();
    }

    /**
     * Initializes the application's data, including the tenant list and table.
     * Populates the tenant list with sample data for demonstration purposes.
     */
    private void initializeData() {
        tenantList = new LinkedList<>(); // linkedlist is used for data storage
        // Registering sample tenant
        registerTenant(new TenantModel((short) 101, "Ram Shrestha", (short) 25, "9812345670", "2019-03-15", (short) 101, "Male"));
        registerTenant(new TenantModel((short) 102, "Sita Pokherel", (short) 30, "9823456781", "2020-06-10", (short) 102, "Female"));
        registerTenant(new TenantModel((short) 103, "Hari Khadka", (short) 40, "9834567892", "2018-08-20", (short) 103, "Male"));
        registerTenant(new TenantModel((short) 104, "Gita Thapa", (short) 22, "9845678903", "2021-01-25", (short) 104, "Female"));
        registerTenant(new TenantModel((short) 105, "Krishna Lama", (short) 35, "9856789014", "2022-11-05", (short) 105, "Male"));
        registerTenant(new TenantModel((short) 106, "Rita Koirala", (short) 28, "9867890125", "2023-09-30", (short) 106, "Female"));
        registerTenant(new TenantModel((short) 107, "Bikash Kafle", (short) 45, "9878901236", "2024-07-18", (short) 107, "Male"));
        registerTenant(new TenantModel((short) 108, "Saraswati Rai", (short) 32, "9889012347", "2020-04-12", (short) 108, "Female"));
        registerTenant(new TenantModel((short) 109, "Prakash Karki", (short) 50, "9890123458", "2023-02-28", (short) 109, "Male"));
        registerTenant(new TenantModel((short) 110, "Mina Dahal", (short) 27, "9801234569", "2018-12-10", (short) 110, "Female"));
    }

    /**
     * Method to add tenant data and populate the table
     *
     */
    private void registerTenant(TenantModel tenant) {
        tenantList.add(tenant);
        DefaultTableModel model = (DefaultTableModel) tblMangeTenant.getModel();
        model.addRow(new Object[]{
            tenant.getTenantId(), tenant.getName(), tenant.getAge(), tenant.getContact(),
            tenant.getJoinDate(), tenant.getFlatId(), tenant.getGender()
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGrpGender = new javax.swing.ButtonGroup();
        pnlManageTenantMain = new javax.swing.JPanel();
        pnlMenu = new javax.swing.JPanel();
        lblMenuTitleIcon = new javax.swing.JLabel();
        lblMenuTitle = new javax.swing.JLabel();
        lblMenuTitleBoder = new javax.swing.JLabel();
        pnlMenuHome = new javax.swing.JPanel();
        lblMenuHomeIcon = new javax.swing.JLabel();
        lblMenuHomeTitle = new javax.swing.JLabel();
        pnlMenuDashboard = new javax.swing.JPanel();
        lblMenuDashboardIcon = new javax.swing.JLabel();
        lblMenuDashboardTitle = new javax.swing.JLabel();
        lblMenuManageLeftBoder = new javax.swing.JLabel();
        lblMenuManageTitle = new javax.swing.JLabel();
        lblMenuManageRightBoder = new javax.swing.JLabel();
        pnlMenuManageFlat = new javax.swing.JPanel();
        lblMenuManageFlatIcon = new javax.swing.JLabel();
        lblMenuManageFlatTitle = new javax.swing.JLabel();
        pnlMenuManageTenant = new javax.swing.JPanel();
        lblMenuManageTenantIcon = new javax.swing.JLabel();
        lblMenuManageTenantTitle = new javax.swing.JLabel();
        lblMenuSortAndSearchLeftBoder = new javax.swing.JLabel();
        lblMenuSortAndSearchTitle = new javax.swing.JLabel();
        lblMenuSortAndSearchRightBoder = new javax.swing.JLabel();
        pnlMenuSortAndSearchFlat = new javax.swing.JPanel();
        lblMenuSortAndSearchFlatIcon = new javax.swing.JLabel();
        lblMenuSortAndSearchFlatTitle = new javax.swing.JLabel();
        pnlMenuSortAndSearchTenant = new javax.swing.JPanel();
        lblMenuSortAndSearchTenantIcon = new javax.swing.JLabel();
        lblMenuSortAndSearchTenantTitle = new javax.swing.JLabel();
        lblMenuSettingLeftBoder = new javax.swing.JLabel();
        lblMenuSettingTitle = new javax.swing.JLabel();
        lblMenuSettingRightBoder = new javax.swing.JLabel();
        pnlMenuSettingLogout = new javax.swing.JPanel();
        lblMenuSettingLogoutIcon = new javax.swing.JLabel();
        lblMenuSettingLogoutTitle = new javax.swing.JLabel();
        lblMenuBackgroundImage = new javax.swing.JLabel();
        lblLoginClose = new javax.swing.JLabel();
        lblViewTenantDetails = new javax.swing.JLabel();
        scrlpnMangeTenantTable = new javax.swing.JScrollPane();
        tblMangeTenant = new javax.swing.JTable();
        lblMangeFlatTitle = new javax.swing.JLabel();
        lblTenantId = new javax.swing.JLabel();
        lblColonTenantId = new javax.swing.JLabel();
        txtFldTenantId = new javax.swing.JTextField();
        lblName = new javax.swing.JLabel();
        lblColonName = new javax.swing.JLabel();
        txtFldName = new javax.swing.JTextField();
        lblAge = new javax.swing.JLabel();
        lblColonAge = new javax.swing.JLabel();
        txtFldAge = new javax.swing.JTextField();
        lblContact = new javax.swing.JLabel();
        lblColonContact = new javax.swing.JLabel();
        txtFldContact = new javax.swing.JTextField();
        lblFlatId = new javax.swing.JLabel();
        lblColonFlat = new javax.swing.JLabel();
        txtFldFlatId = new javax.swing.JTextField();
        lblJoinDate = new javax.swing.JLabel();
        dtChrDateChooser = new com.toedter.calendar.JDateChooser();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        lblGender = new javax.swing.JLabel();
        rdoBtnFemale = new javax.swing.JRadioButton();
        rdoBtnMale = new javax.swing.JRadioButton();
        lblErrorMsgTenantId = new javax.swing.JLabel();
        lblErrorMsgName = new javax.swing.JLabel();
        lblErrorMsgAge = new javax.swing.JLabel();
        lblErrorMsgContact = new javax.swing.JLabel();
        lblErrorMsgFlatId = new javax.swing.JLabel();
        lblErrorMsgJoinDate = new javax.swing.JLabel();
        lblErrorMsgGender = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1706, 912));
        setMinimumSize(new java.awt.Dimension(1706, 912));
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlManageTenantMain.setBackground(new java.awt.Color(232, 245, 255));
        pnlManageTenantMain.setMaximumSize(new java.awt.Dimension(1706, 912));
        pnlManageTenantMain.setMinimumSize(new java.awt.Dimension(1706, 912));
        pnlManageTenantMain.setPreferredSize(new java.awt.Dimension(1706, 912));
        pnlManageTenantMain.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlMenu.setBackground(new java.awt.Color(255, 255, 255));
        pnlMenu.setMaximumSize(new java.awt.Dimension(371, 912));
        pnlMenu.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblMenuTitleIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/technoComplex/resources/image/icons/whiteTechnoLogo.png"))); // NOI18N
        pnlMenu.add(lblMenuTitleIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(-40, 10, 220, 150));

        lblMenuTitle.setFont(new java.awt.Font("Poppins", 2, 26)); // NOI18N
        lblMenuTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblMenuTitle.setText("Techno Complex");
        pnlMenu.add(lblMenuTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 30, 230, 80));

        lblMenuTitleBoder.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(255, 255, 255)));
        pnlMenu.add(lblMenuTitleBoder, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 370, 60));

        pnlMenuHome.setMaximumSize(new java.awt.Dimension(371, 60));
        pnlMenuHome.setMinimumSize(new java.awt.Dimension(371, 60));
        pnlMenuHome.setOpaque(false);
        pnlMenuHome.setPreferredSize(new java.awt.Dimension(371, 60));
        pnlMenuHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlMenuHomeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnlMenuHomeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlMenuHomeMouseExited(evt);
            }
        });
        pnlMenuHome.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblMenuHomeIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/technoComplex/resources/image/icons/home_16dp_FFFFFF_FILL0_wght400_GRAD0_opsz20.png"))); // NOI18N
        lblMenuHomeIcon.setText("jLabel11");
        pnlMenuHome.add(lblMenuHomeIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 0, 70, 50));

        lblMenuHomeTitle.setFont(new java.awt.Font("Poppins", 0, 28)); // NOI18N
        lblMenuHomeTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblMenuHomeTitle.setText("Home");
        pnlMenuHome.add(lblMenuHomeTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, -1, -1));

        pnlMenu.add(pnlMenuHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 180, -1, -1));

        pnlMenuDashboard.setMaximumSize(new java.awt.Dimension(371, 60));
        pnlMenuDashboard.setMinimumSize(new java.awt.Dimension(371, 60));
        pnlMenuDashboard.setOpaque(false);
        pnlMenuDashboard.setPreferredSize(new java.awt.Dimension(371, 60));
        pnlMenuDashboard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlMenuDashboardMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnlMenuDashboardMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlMenuDashboardMouseExited(evt);
            }
        });
        pnlMenuDashboard.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblMenuDashboardIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/technoComplex/resources/image/icons/dashboard_16dp_FFFFFF_FILL0_wght400_GRAD0_opsz20.png"))); // NOI18N
        pnlMenuDashboard.add(lblMenuDashboardIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 6, -1, 48));

        lblMenuDashboardTitle.setFont(new java.awt.Font("Poppins", 0, 28)); // NOI18N
        lblMenuDashboardTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblMenuDashboardTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMenuDashboardTitle.setText("Dashboard");
        pnlMenuDashboard.add(lblMenuDashboardTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 6, -1, -1));

        pnlMenu.add(pnlMenuDashboard, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 240, -1, -1));

        lblMenuManageLeftBoder.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(255, 255, 255)));
        pnlMenu.add(lblMenuManageLeftBoder, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 310, 130, 10));

        lblMenuManageTitle.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblMenuManageTitle.setForeground(new java.awt.Color(191, 191, 191));
        lblMenuManageTitle.setText("Manage");
        pnlMenu.add(lblMenuManageTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 310, 90, 20));

        lblMenuManageRightBoder.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(255, 255, 255)));
        pnlMenu.add(lblMenuManageRightBoder, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 310, 150, 10));

        pnlMenuManageFlat.setMaximumSize(new java.awt.Dimension(371, 60));
        pnlMenuManageFlat.setMinimumSize(new java.awt.Dimension(371, 60));
        pnlMenuManageFlat.setOpaque(false);
        pnlMenuManageFlat.setPreferredSize(new java.awt.Dimension(371, 60));
        pnlMenuManageFlat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlMenuManageFlatMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnlMenuManageFlatMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlMenuManageFlatMouseExited(evt);
            }
        });
        pnlMenuManageFlat.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblMenuManageFlatIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/technoComplex/resources/image/icons/room_preferences_16dp_FFFFFF_FILL0_wght400_GRAD-25_opsz20.png"))); // NOI18N
        pnlMenuManageFlat.add(lblMenuManageFlatIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 0, -1, 54));

        lblMenuManageFlatTitle.setFont(new java.awt.Font("Poppins", 0, 28)); // NOI18N
        lblMenuManageFlatTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblMenuManageFlatTitle.setText("Flat");
        pnlMenuManageFlat.add(lblMenuManageFlatTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 6, -1, -1));

        pnlMenu.add(pnlMenuManageFlat, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 340, -1, -1));

        pnlMenuManageTenant.setBackground(new java.awt.Color(97,97,97,120));
        pnlMenuManageTenant.setMaximumSize(new java.awt.Dimension(371, 60));
        pnlMenuManageTenant.setMinimumSize(new java.awt.Dimension(371, 60));
        pnlMenuManageTenant.setPreferredSize(new java.awt.Dimension(371, 60));
        pnlMenuManageTenant.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblMenuManageTenantIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/technoComplex/resources/image/icons/manage_accounts_16dp_FFFFFF_FILL0_wght400_GRAD0_opsz20.png"))); // NOI18N
        pnlMenuManageTenant.add(lblMenuManageTenantIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 6, -1, 48));

        lblMenuManageTenantTitle.setFont(new java.awt.Font("Poppins", 0, 28)); // NOI18N
        lblMenuManageTenantTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblMenuManageTenantTitle.setText("Tenant");
        pnlMenuManageTenant.add(lblMenuManageTenantTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 11, -1, -1));

        pnlMenu.add(pnlMenuManageTenant, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 400, -1, -1));

        lblMenuSortAndSearchLeftBoder.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(255, 255, 255)));
        pnlMenu.add(lblMenuSortAndSearchLeftBoder, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 460, 100, 10));

        lblMenuSortAndSearchTitle.setFont(new java.awt.Font("Poppins", 0, 16)); // NOI18N
        lblMenuSortAndSearchTitle.setForeground(new java.awt.Color(191, 191, 191));
        lblMenuSortAndSearchTitle.setText("Sort and Search");
        pnlMenu.add(lblMenuSortAndSearchTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 460, 160, 20));

        lblMenuSortAndSearchRightBoder.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(255, 255, 255)));
        pnlMenu.add(lblMenuSortAndSearchRightBoder, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 460, 120, 10));

        pnlMenuSortAndSearchFlat.setMaximumSize(new java.awt.Dimension(371, 60));
        pnlMenuSortAndSearchFlat.setMinimumSize(new java.awt.Dimension(371, 60));
        pnlMenuSortAndSearchFlat.setOpaque(false);
        pnlMenuSortAndSearchFlat.setPreferredSize(new java.awt.Dimension(371, 60));
        pnlMenuSortAndSearchFlat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlMenuSortAndSearchFlatMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnlMenuSortAndSearchFlatMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlMenuSortAndSearchFlatMouseExited(evt);
            }
        });
        pnlMenuSortAndSearchFlat.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblMenuSortAndSearchFlatIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/technoComplex/resources/image/icons/manage_search_16dp_FFFFFF_FILL0_wght400_GRAD0_opsz20.png"))); // NOI18N
        pnlMenuSortAndSearchFlat.add(lblMenuSortAndSearchFlatIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 0, 58, 51));

        lblMenuSortAndSearchFlatTitle.setFont(new java.awt.Font("Poppins", 0, 28)); // NOI18N
        lblMenuSortAndSearchFlatTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblMenuSortAndSearchFlatTitle.setText("Flat");
        pnlMenuSortAndSearchFlat.add(lblMenuSortAndSearchFlatTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 8, -1, -1));

        pnlMenu.add(pnlMenuSortAndSearchFlat, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 490, -1, -1));

        pnlMenuSortAndSearchTenant.setMaximumSize(new java.awt.Dimension(371, 60));
        pnlMenuSortAndSearchTenant.setMinimumSize(new java.awt.Dimension(371, 60));
        pnlMenuSortAndSearchTenant.setOpaque(false);
        pnlMenuSortAndSearchTenant.setPreferredSize(new java.awt.Dimension(371, 60));
        pnlMenuSortAndSearchTenant.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlMenuSortAndSearchTenantMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnlMenuSortAndSearchTenantMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlMenuSortAndSearchTenantMouseExited(evt);
            }
        });
        pnlMenuSortAndSearchTenant.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblMenuSortAndSearchTenantIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/technoComplex/resources/image/icons/manage_search_16dp_FFFFFF_FILL0_wght400_GRAD0_opsz20.png"))); // NOI18N
        pnlMenuSortAndSearchTenant.add(lblMenuSortAndSearchTenantIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 0, 58, 51));

        lblMenuSortAndSearchTenantTitle.setFont(new java.awt.Font("Poppins", 0, 28)); // NOI18N
        lblMenuSortAndSearchTenantTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblMenuSortAndSearchTenantTitle.setText("Tenant");
        pnlMenuSortAndSearchTenant.add(lblMenuSortAndSearchTenantTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 8, -1, -1));

        pnlMenu.add(pnlMenuSortAndSearchTenant, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 550, -1, -1));

        lblMenuSettingLeftBoder.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(255, 255, 255)));
        pnlMenu.add(lblMenuSettingLeftBoder, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 610, 130, 10));

        lblMenuSettingTitle.setFont(new java.awt.Font("Poppins", 0, 16)); // NOI18N
        lblMenuSettingTitle.setForeground(new java.awt.Color(191, 191, 191));
        lblMenuSettingTitle.setText("Setting");
        pnlMenu.add(lblMenuSettingTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 610, 70, 20));

        lblMenuSettingRightBoder.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(255, 255, 255)));
        pnlMenu.add(lblMenuSettingRightBoder, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 610, 160, 10));

        pnlMenuSettingLogout.setMaximumSize(new java.awt.Dimension(371, 60));
        pnlMenuSettingLogout.setMinimumSize(new java.awt.Dimension(371, 60));
        pnlMenuSettingLogout.setOpaque(false);
        pnlMenuSettingLogout.setPreferredSize(new java.awt.Dimension(371, 60));
        pnlMenuSettingLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlMenuSettingLogoutMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnlMenuSettingLogoutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlMenuSettingLogoutMouseExited(evt);
            }
        });
        pnlMenuSettingLogout.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblMenuSettingLogoutIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/technoComplex/resources/image/icons/logout_16dp_FFFFFF_FILL0_wght400_GRAD0_opsz20.png"))); // NOI18N
        pnlMenuSettingLogout.add(lblMenuSettingLogoutIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, 58, 50));

        lblMenuSettingLogoutTitle.setFont(new java.awt.Font("Poppins", 0, 28)); // NOI18N
        lblMenuSettingLogoutTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblMenuSettingLogoutTitle.setText("Log Out");
        pnlMenuSettingLogout.add(lblMenuSettingLogoutTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 8, -1, -1));

        pnlMenu.add(pnlMenuSettingLogout, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 630, -1, -1));

        lblMenuBackgroundImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/technoComplex/resources/image/background/fd.png"))); // NOI18N
        pnlMenu.add(lblMenuBackgroundImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pnlManageTenantMain.add(pnlMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        lblLoginClose.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblLoginClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/technoComplex/resources/image/icons/close.png"))); // NOI18N
        lblLoginClose.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblLoginClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblLoginCloseMouseClicked(evt);
            }
        });
        pnlManageTenantMain.add(lblLoginClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(1650, 0, 50, 50));

        lblViewTenantDetails.setFont(new java.awt.Font("Poppins", 0, 36)); // NOI18N
        lblViewTenantDetails.setForeground(new java.awt.Color(102, 153, 255));
        lblViewTenantDetails.setText("View Tenant Details");
        pnlManageTenantMain.add(lblViewTenantDetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 10, 400, 60));

        scrlpnMangeTenantTable.setBackground(new java.awt.Color(0, 255, 204));
        scrlpnMangeTenantTable.setForeground(new java.awt.Color(255, 255, 255));
        scrlpnMangeTenantTable.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        tblMangeTenant.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tenant Id", "Name", "Age", "Contact", "Join Date", "Flat Id", "Gender"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Short.class, java.lang.String.class, java.lang.Short.class, java.lang.String.class, java.lang.String.class, java.lang.Short.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMangeTenant.getTableHeader().setReorderingAllowed(false);
        scrlpnMangeTenantTable.setViewportView(tblMangeTenant);
        if (tblMangeTenant.getColumnModel().getColumnCount() > 0) {
            tblMangeTenant.getColumnModel().getColumn(0).setResizable(false);
            tblMangeTenant.getColumnModel().getColumn(1).setResizable(false);
            tblMangeTenant.getColumnModel().getColumn(2).setResizable(false);
            tblMangeTenant.getColumnModel().getColumn(3).setResizable(false);
            tblMangeTenant.getColumnModel().getColumn(4).setResizable(false);
            tblMangeTenant.getColumnModel().getColumn(5).setResizable(false);
            tblMangeTenant.getColumnModel().getColumn(6).setResizable(false);
        }

        pnlManageTenantMain.add(scrlpnMangeTenantTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 80, 1210, 250));

        lblMangeFlatTitle.setFont(new java.awt.Font("Poppins", 0, 36)); // NOI18N
        lblMangeFlatTitle.setForeground(new java.awt.Color(102, 153, 255));
        lblMangeFlatTitle.setText("Manage Tenant");
        pnlManageTenantMain.add(lblMangeFlatTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 340, 330, 60));

        lblTenantId.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblTenantId.setText("Tenant Id ");
        pnlManageTenantMain.add(lblTenantId, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 430, -1, -1));

        lblColonTenantId.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblColonTenantId.setText(":");
        pnlManageTenantMain.add(lblColonTenantId, new org.netbeans.lib.awtextra.AbsoluteConstraints(555, 430, 10, -1));
        pnlManageTenantMain.add(txtFldTenantId, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 420, 120, 40));

        lblName.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblName.setText("Name");
        pnlManageTenantMain.add(lblName, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 500, -1, -1));

        lblColonName.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblColonName.setText(":");
        pnlManageTenantMain.add(lblColonName, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 500, 10, -1));
        pnlManageTenantMain.add(txtFldName, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 490, 250, 40));

        lblAge.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblAge.setText("Age");
        pnlManageTenantMain.add(lblAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 570, -1, -1));

        lblColonAge.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblColonAge.setText(":");
        pnlManageTenantMain.add(lblColonAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 570, 10, -1));
        pnlManageTenantMain.add(txtFldAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 560, 90, 40));

        lblContact.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblContact.setText("Contact");
        pnlManageTenantMain.add(lblContact, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 640, -1, -1));

        lblColonContact.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblColonContact.setText(":");
        pnlManageTenantMain.add(lblColonContact, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 640, 10, -1));
        pnlManageTenantMain.add(txtFldContact, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 640, 250, 40));

        lblFlatId.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblFlatId.setText("Flat Id ");
        pnlManageTenantMain.add(lblFlatId, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 710, 90, -1));

        lblColonFlat.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblColonFlat.setText(":");
        pnlManageTenantMain.add(lblColonFlat, new org.netbeans.lib.awtextra.AbsoluteConstraints(555, 710, 10, -1));
        pnlManageTenantMain.add(txtFldFlatId, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 710, 120, 40));

        lblJoinDate.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblJoinDate.setText("Join Date");
        pnlManageTenantMain.add(lblJoinDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 450, -1, -1));

        dtChrDateChooser.setDateFormatString("YYYY,MM,dd");
        dtChrDateChooser.setMaxSelectableDate(new java.util.Date(1735672575000L));
        dtChrDateChooser.setMinSelectableDate(new java.util.Date(1514747764000L));
        pnlManageTenantMain.add(dtChrDateChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 450, 290, 30));

        btnAdd.setBackground(new java.awt.Color(102, 153, 255));
        btnAdd.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        pnlManageTenantMain.add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 780, 120, 60));

        btnUpdate.setBackground(new java.awt.Color(102, 153, 255));
        btnUpdate.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        pnlManageTenantMain.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 780, 120, 60));

        btnDelete.setBackground(new java.awt.Color(102, 153, 255));
        btnDelete.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        pnlManageTenantMain.add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 780, 120, 60));

        lblGender.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblGender.setText("Gender");
        pnlManageTenantMain.add(lblGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 650, -1, -1));

        btnGrpGender.add(rdoBtnFemale);
        rdoBtnFemale.setText("Female");
        pnlManageTenantMain.add(rdoBtnFemale, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 660, -1, -1));

        btnGrpGender.add(rdoBtnMale);
        rdoBtnMale.setText("Male");
        pnlManageTenantMain.add(rdoBtnMale, new org.netbeans.lib.awtextra.AbsoluteConstraints(1260, 660, -1, -1));

        lblErrorMsgTenantId.setForeground(new java.awt.Color(255, 0, 0));
        pnlManageTenantMain.add(lblErrorMsgTenantId, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 400, -1, -1));

        lblErrorMsgName.setForeground(new java.awt.Color(255, 0, 0));
        pnlManageTenantMain.add(lblErrorMsgName, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 470, -1, -1));

        lblErrorMsgAge.setForeground(new java.awt.Color(255, 0, 0));
        pnlManageTenantMain.add(lblErrorMsgAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 540, -1, -1));

        lblErrorMsgContact.setForeground(new java.awt.Color(255, 0, 0));
        pnlManageTenantMain.add(lblErrorMsgContact, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 620, -1, -1));

        lblErrorMsgFlatId.setForeground(new java.awt.Color(255, 0, 0));
        pnlManageTenantMain.add(lblErrorMsgFlatId, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 690, -1, -1));

        lblErrorMsgJoinDate.setForeground(new java.awt.Color(255, 0, 0));
        pnlManageTenantMain.add(lblErrorMsgJoinDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 430, -1, -1));

        lblErrorMsgGender.setForeground(new java.awt.Color(255, 0, 0));
        pnlManageTenantMain.add(lblErrorMsgGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 630, -1, -1));

        getContentPane().add(pnlManageTenantMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Turn the background light and show underline for label when mouse entered
     * the menu item i.e hover effect
     *
     * @param menuPanel the menu item panel in which light background (hover
     * effect) is to be shown
     * @param menuPanelLabel the menu title label in which underline label
     * (hover effect) is to be shown
     */
    private void mouseEnter(JPanel menuPanel, JLabel menuPanelLabel) {
        menuPanel.setBackground(null);
        menuPanel.setBackground(new Color(192, 213, 255));
        menuPanel.setOpaque(true);
        menuPanelLabel.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
    }

    /**
     * Remove the hover effect when mouse leave the menu item
     *
     * @param menuPanel the menu item panel to turn it back to normal
     * @param menuPanelLabel the menu title label to turn it back to normal
     *
     */
    private void mouseExit(JPanel menuPanel, JLabel menuPanelLabel) {
        menuPanel.setBackground(null);
        menuPanel.setOpaque(false);
        menuPanelLabel.setBorder(null);
    }

    private void pnlMenuHomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuHomeMouseClicked
        new Home().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_pnlMenuHomeMouseClicked

    private void pnlMenuHomeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuHomeMouseEntered
        mouseEnter(pnlMenuHome, lblMenuHomeTitle);
    }//GEN-LAST:event_pnlMenuHomeMouseEntered

    private void pnlMenuHomeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuHomeMouseExited
        mouseExit(pnlMenuHome, lblMenuHomeTitle);
    }//GEN-LAST:event_pnlMenuHomeMouseExited

    private void pnlMenuDashboardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuDashboardMouseClicked
        new Dashboard().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_pnlMenuDashboardMouseClicked

    private void pnlMenuDashboardMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuDashboardMouseEntered
        mouseEnter(pnlMenuDashboard, lblMenuDashboardTitle);
    }//GEN-LAST:event_pnlMenuDashboardMouseEntered

    private void pnlMenuDashboardMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuDashboardMouseExited
        mouseExit(pnlMenuDashboard, lblMenuDashboardTitle);
    }//GEN-LAST:event_pnlMenuDashboardMouseExited

    private void pnlMenuSortAndSearchFlatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuSortAndSearchFlatMouseClicked
        new SortAndSearchFlat().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_pnlMenuSortAndSearchFlatMouseClicked

    private void pnlMenuSortAndSearchFlatMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuSortAndSearchFlatMouseEntered
        mouseEnter(pnlMenuSortAndSearchFlat, lblMenuSortAndSearchFlatTitle);
    }//GEN-LAST:event_pnlMenuSortAndSearchFlatMouseEntered

    private void pnlMenuSortAndSearchFlatMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuSortAndSearchFlatMouseExited
        mouseExit(pnlMenuSortAndSearchFlat, lblMenuSortAndSearchFlatTitle);
    }//GEN-LAST:event_pnlMenuSortAndSearchFlatMouseExited

    private void pnlMenuSortAndSearchTenantMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuSortAndSearchTenantMouseClicked
        new SortAndSearchTenant().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_pnlMenuSortAndSearchTenantMouseClicked

    private void pnlMenuSortAndSearchTenantMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuSortAndSearchTenantMouseEntered
        mouseEnter(pnlMenuSortAndSearchTenant, lblMenuSortAndSearchTenantTitle);
    }//GEN-LAST:event_pnlMenuSortAndSearchTenantMouseEntered

    private void pnlMenuSortAndSearchTenantMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuSortAndSearchTenantMouseExited
        mouseExit(pnlMenuSortAndSearchTenant, lblMenuSortAndSearchTenantTitle);
    }//GEN-LAST:event_pnlMenuSortAndSearchTenantMouseExited

    private void pnlMenuSettingLogoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuSettingLogoutMouseClicked
        new LogIn().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_pnlMenuSettingLogoutMouseClicked

    private void pnlMenuSettingLogoutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuSettingLogoutMouseEntered
        mouseEnter(pnlMenuSettingLogout, lblMenuSettingLogoutTitle);
    }//GEN-LAST:event_pnlMenuSettingLogoutMouseEntered

    private void pnlMenuSettingLogoutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuSettingLogoutMouseExited
        mouseExit(pnlMenuSettingLogout, lblMenuSettingLogoutTitle);
    }//GEN-LAST:event_pnlMenuSettingLogoutMouseExited

    private void pnlMenuManageFlatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuManageFlatMouseClicked
        new ManageFlat().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_pnlMenuManageFlatMouseClicked

    private void pnlMenuManageFlatMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuManageFlatMouseEntered
        mouseEnter(pnlMenuManageFlat, lblMenuManageFlatTitle);
    }//GEN-LAST:event_pnlMenuManageFlatMouseEntered

    private void pnlMenuManageFlatMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuManageFlatMouseExited
        mouseExit(pnlMenuManageFlat, lblMenuManageFlatTitle);
    }//GEN-LAST:event_pnlMenuManageFlatMouseExited
    /**
     * Handles the mouse click event on the close label in the ManageTenant window.
     * Prompts the user with a confirmation dialog to close the system. If the
     * user confirms, the application is terminated.
     *
     * @param evt the event triggered by clicking on the close label
     */
    private void lblLoginCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLoginCloseMouseClicked
        int closeSystem = JOptionPane.showConfirmDialog(pnlManageTenantMain, "Do you want to close the \nTecnho Management System", "Close System", JOptionPane.YES_NO_OPTION);
        if (closeSystem == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_lblLoginCloseMouseClicked

    /**
     * Event handler for the Add button action. Validates input fields, creates
     * a new tenant record if valid, and checks for duplicate tenant Id before
     * adding the record to the flat list.
     *
     * @param evt the ActionEvent triggered by the Add button
     */
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        boolean isValid = true;
        // Validate TenantId
        isValid &= validateField(
                txtFldTenantId, "Tenant ID", lblErrorMsgTenantId, "Must be 3-digit number.",
                ValidationUtil.isValidId(txtFldTenantId.getText().trim())
        );
        // Validate Name
        isValid &= validateField(
                txtFldName, "Name", lblErrorMsgName, "Must be alphabetic",
                ValidationUtil.isValidName(txtFldName.getText().trim())
        );
        // Validate age
        try {
            short age = Short.parseShort(txtFldAge.getText().trim());
            isValid &= validateField(
                    txtFldAge, "Age", lblErrorMsgAge, "In between 18 to 60",
                    ValidationUtil.isValidAge(age)
            );
        } catch (NumberFormatException e) {
            validateField(
                    txtFldAge, "Age", lblErrorMsgAge, "In between 18 to 60",
                    false
            );
        }
        // Validate Contact
        isValid &= validateField(
                txtFldContact, "Contact", lblErrorMsgContact, "Must start with 98 and be 10-digits",
                ValidationUtil.isValidContact(txtFldContact.getText().trim())
        );
        // Validate flatId
        isValid &= validateField(
                txtFldFlatId, "Flat ID", lblErrorMsgFlatId, "Must be 3-digit number.",
                ValidationUtil.isValidId(txtFldFlatId.getText().trim())
        );
        // Validate gender
        if (!rdoBtnFemale.isSelected() && !rdoBtnMale.isSelected()) {
            isValid &= false;
            lblErrorMsgGender.setText("Gender canont be empty");
        } else {
            lblErrorMsgGender.setText(null);
        }
        // Validate Join date
        if (dtChrDateChooser.getDate() == null) {
            isValid &= false;
            lblErrorMsgJoinDate.setText("Date canont be empty");
        } else {
            lblErrorMsgJoinDate.setText(null);
        }
        // Create a tenant instance
        if (isValid) {
            SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
            String formatDate = formatter.format(dtChrDateChooser.getDate());
            TenantModel newTenant = new TenantModel(
                    Short.parseShort(txtFldTenantId.getText().trim()),
                    txtFldName.getText().trim(),
                    Short.parseShort(txtFldAge.getText().trim()),
                    txtFldContact.getText().trim(),
                    formatDate,
                    Short.parseShort(txtFldFlatId.getText().trim()),
                    rdoBtnFemale.isSelected() ? "Female" : "Male"
            );
            // Check for duplicate tenant Id
            if (checkDuplicateTenant(newTenant)) {
                txtFldTenantId.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0), 2));
                JOptionPane.showMessageDialog(this, "Tenant ID already exists.", "Duplicate Entry", JOptionPane.WARNING_MESSAGE);
            } else {
                // Add the tenant list as well as table  if no duplicate is found
                tenantList.add(newTenant);
                // clear the form
                clearForm();
                // refresh the table
                loadListToTable(tenantList);
                txtFldFlatId.setBorder(null);
                JOptionPane.showMessageDialog(this, "Tenant details has been added successfully.", "Successfully Added", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnAddActionPerformed
    /**
     * Event handler for the Update button action. Validates input fields,
     * Update existing tenant record if valid, by matching the tenant id before
     * adding the record to the student list.
     *
     * @param evt the ActionEvent triggered by the Update button
     */
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        boolean isValid = true;
        // Validate TenantId
        isValid &= validateField(
                txtFldTenantId, "Tenant ID", lblErrorMsgTenantId, "Must be 3-digit number.",
                ValidationUtil.isValidId(txtFldTenantId.getText().trim())
        );
        // Validate Name
        isValid &= validateField(
                txtFldName, "Name", lblErrorMsgName, "Must be alphabetic",
                ValidationUtil.isValidName(txtFldName.getText().trim())
        );
        // Validate age
        try {
            short age = Short.parseShort(txtFldAge.getText().trim());
            isValid &= validateField(
                    txtFldAge, "Age", lblErrorMsgAge, "In between 18 to 60",
                    ValidationUtil.isValidAge(age)
            );
        } catch (NumberFormatException e) {
            validateField(
                    txtFldAge, "Age", lblErrorMsgAge, "In between 18 to 60",
                    false
            );
        }
        // Validate Contact
        isValid &= validateField(
                txtFldContact, "Contact", lblErrorMsgContact, "Must start with 98 and be 10-digits",
                ValidationUtil.isValidContact(txtFldContact.getText().trim())
        );
        // Validate flatId
        isValid &= validateField(
                txtFldFlatId, "Flat ID", lblErrorMsgFlatId, "Must be 3-digit number.",
                ValidationUtil.isValidId(txtFldFlatId.getText().trim())
        );
        // Validate gender
        if (!rdoBtnFemale.isSelected() && !rdoBtnMale.isSelected()) {
            isValid &= false;
            lblErrorMsgGender.setText("Gender canont be empty");
        } else {
            lblErrorMsgGender.setText(null);
        }
        // Validate Join date
        if (dtChrDateChooser.getDate() == null) {
            isValid &= false;
            lblErrorMsgJoinDate.setText("Date canont be empty");
        } else {
            lblErrorMsgJoinDate.setText(null);
        }
        if (isValid) {
            
            // Taking the date object from JCalender and converting it to formated date string
            SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
            String formatDate = formatter.format(dtChrDateChooser.getDate());
            // Create a flatModel instance
            TenantModel updateTenant = new TenantModel(
                    Short.parseShort(txtFldTenantId.getText().trim()),
                    txtFldName.getText().trim(),
                    Short.parseShort(txtFldAge.getText().trim()),
                    txtFldContact.getText().trim(),
                    formatDate,
                    Short.parseShort(txtFldFlatId.getText().trim()),
                    rdoBtnFemale.isSelected() ? "Female" : "Male"
            );
            boolean isUpdated = false;
            // Find and update the tenant in the list
            for (int i = 0; i < tenantList.size(); i++) {
                if (tenantList.get(i).getTenantId() == updateTenant.getTenantId()) {
                    tenantList.set(i, updateTenant);
                    isUpdated = true;
                    break;
                }
            }
            // Update status to the user
            if (isUpdated) {
                clearForm();
                loadListToTable(tenantList);
                JOptionPane.showMessageDialog(this, "Tenant details updated successfully.", "Update Successful", JOptionPane.INFORMATION_MESSAGE);
            } else {
                txtFldTenantId.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0), 2));
                JOptionPane.showMessageDialog(this, "Tenant ID not found.", "Update Failed", JOptionPane.WARNING_MESSAGE);
            }
        }

    }//GEN-LAST:event_btnUpdateActionPerformed
    /**
     * Event handler for the Delete button action. Select row from the tenant
     * table by user selection and ask for confirmation before deleting
     *
     * @param evt the ActionEvent triggered by the delete button
     */
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // Get the selected row index
        int selectedRow = tblMangeTenant.getSelectedRow();

        if (selectedRow == -1) {
            // No row is selected
            JOptionPane.showMessageDialog(this, "Please select a tenant to delete by clicking on a row in the table.", "No Selection", JOptionPane.WARNING_MESSAGE);
        } else {
            // Confirm deletion
            int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete the selected flat?", "Confirm Deletion", JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
                // Remove the flat from the list
                tenantList.remove(selectedRow);
                // Refresh the table
                loadListToTable(tenantList);
                // Clear the form
                clearForm();
                JOptionPane.showMessageDialog(this, "Tenant deleted successfully.", "Deleted", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * Checks whether a tenant with the same flat ID already exists in the list.
     *
     * @param tenant the tenantModel object to check for duplicates
     * @return true if a duplicate is found, false otherwise
     */
    private boolean checkDuplicateTenant(TenantModel tenant) {
        for (TenantModel existingTenant : tenantList) {
            if (existingTenant.getTenantId() == tenant.getTenantId()) {
                return true; // Duplicate found
            }
        }
        return false; // No duplicate found
    }

    /**
     * Clears all input fields in the tenant form. Resets each field's value to
     * default
     */
    private void clearForm() {
        txtFldTenantId.setText("");
        txtFldName.setText("");
        txtFldAge.setText("");
        txtFldContact.setText("");
        txtFldAge.setText("");
        txtFldFlatId.setText("");
        dtChrDateChooser.setDate(null);
        btnGrpGender.clearSelection();
    }

    /**
     * Populates the JTable with the current list of tenant records. Clears
     * existing rows in the table model before adding new data.
     *
     * @param tenantList load the data to table
     */
    private void loadListToTable(List<TenantModel> tenantList) {
        DefaultTableModel model = (DefaultTableModel) tblMangeTenant.getModel();
        // Clear existing rows if needed
        model.setRowCount(0);
        // Populate the table with tenant data
        for (TenantModel tenant : tenantList) {
            model.addRow(new Object[]{
                tenant.getTenantId(), tenant.getName(), tenant.getAge(), tenant.getContact(),
                tenant.getJoinDate(), tenant.getFlatId(), tenant.getGender()
            });
        }
    }

    /**
     * Validates a single input field based on specific criteria and updates its
     * visual state.
     *
     * @param textField the JTextField to validate
     * @param fieldName the name of the field for error display
     * @param errorLbl the JLabel to show error messages
     * @param errorMsg the error message to display for invalid input
     * @param isValidFormat whether the input satisfies the field-specific
     * validation criteria
     * @return true if the field passes validation, false otherwise
     */
    private boolean validateField(JTextField textField, String fieldName, JLabel errorLbl, String errorMsg, boolean isValidFormat) {
        if (ValidationUtil.isNullOrEmpty(textField.getText())) {
            textField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0), 2));
            errorLbl.setText(fieldName + " cannot be empty!");
            return false;
        } else if (!isValidFormat) {
            textField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0), 2));
            errorLbl.setText(errorMsg);
            return false;
        } else {
            textField.setBorder(null);
            errorLbl.setText(null);
            return true;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageTenant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageTenant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageTenant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageTenant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageTenant().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.ButtonGroup btnGrpGender;
    private javax.swing.JButton btnUpdate;
    private com.toedter.calendar.JDateChooser dtChrDateChooser;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblColonAge;
    private javax.swing.JLabel lblColonContact;
    private javax.swing.JLabel lblColonFlat;
    private javax.swing.JLabel lblColonName;
    private javax.swing.JLabel lblColonTenantId;
    private javax.swing.JLabel lblContact;
    private javax.swing.JLabel lblErrorMsgAge;
    private javax.swing.JLabel lblErrorMsgContact;
    private javax.swing.JLabel lblErrorMsgFlatId;
    private javax.swing.JLabel lblErrorMsgGender;
    private javax.swing.JLabel lblErrorMsgJoinDate;
    private javax.swing.JLabel lblErrorMsgName;
    private javax.swing.JLabel lblErrorMsgTenantId;
    private javax.swing.JLabel lblFlatId;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblJoinDate;
    private javax.swing.JLabel lblLoginClose;
    private javax.swing.JLabel lblMangeFlatTitle;
    private javax.swing.JLabel lblMenuBackgroundImage;
    private javax.swing.JLabel lblMenuDashboardIcon;
    private javax.swing.JLabel lblMenuDashboardTitle;
    private javax.swing.JLabel lblMenuHomeIcon;
    private javax.swing.JLabel lblMenuHomeTitle;
    private javax.swing.JLabel lblMenuManageFlatIcon;
    private javax.swing.JLabel lblMenuManageFlatTitle;
    private javax.swing.JLabel lblMenuManageLeftBoder;
    private javax.swing.JLabel lblMenuManageRightBoder;
    private javax.swing.JLabel lblMenuManageTenantIcon;
    private javax.swing.JLabel lblMenuManageTenantTitle;
    private javax.swing.JLabel lblMenuManageTitle;
    private javax.swing.JLabel lblMenuSettingLeftBoder;
    private javax.swing.JLabel lblMenuSettingLogoutIcon;
    private javax.swing.JLabel lblMenuSettingLogoutTitle;
    private javax.swing.JLabel lblMenuSettingRightBoder;
    private javax.swing.JLabel lblMenuSettingTitle;
    private javax.swing.JLabel lblMenuSortAndSearchFlatIcon;
    private javax.swing.JLabel lblMenuSortAndSearchFlatTitle;
    private javax.swing.JLabel lblMenuSortAndSearchLeftBoder;
    private javax.swing.JLabel lblMenuSortAndSearchRightBoder;
    private javax.swing.JLabel lblMenuSortAndSearchTenantIcon;
    private javax.swing.JLabel lblMenuSortAndSearchTenantTitle;
    private javax.swing.JLabel lblMenuSortAndSearchTitle;
    private javax.swing.JLabel lblMenuTitle;
    private javax.swing.JLabel lblMenuTitleBoder;
    private javax.swing.JLabel lblMenuTitleIcon;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblTenantId;
    private javax.swing.JLabel lblViewTenantDetails;
    private javax.swing.JPanel pnlManageTenantMain;
    private javax.swing.JPanel pnlMenu;
    private javax.swing.JPanel pnlMenuDashboard;
    private javax.swing.JPanel pnlMenuHome;
    private javax.swing.JPanel pnlMenuManageFlat;
    private javax.swing.JPanel pnlMenuManageTenant;
    private javax.swing.JPanel pnlMenuSettingLogout;
    private javax.swing.JPanel pnlMenuSortAndSearchFlat;
    private javax.swing.JPanel pnlMenuSortAndSearchTenant;
    private javax.swing.JRadioButton rdoBtnFemale;
    private javax.swing.JRadioButton rdoBtnMale;
    private javax.swing.JScrollPane scrlpnMangeTenantTable;
    private javax.swing.JTable tblMangeTenant;
    private javax.swing.JTextField txtFldAge;
    private javax.swing.JTextField txtFldContact;
    private javax.swing.JTextField txtFldFlatId;
    private javax.swing.JTextField txtFldName;
    private javax.swing.JTextField txtFldTenantId;
    // End of variables declaration//GEN-END:variables
}
