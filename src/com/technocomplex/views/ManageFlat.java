/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.technocomplex.views;

import com.technocomplex.model.FlatModel;
import com.technocomplex.model.TenantModel;
import com.technocomplex.util.TableUtil;
import com.technocomplex.util.ValidationUtil;
import java.awt.Color;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 * <b>The ManageFlat GUI contain input field for flat details and show them in
 * JTable. It allows admin to perform CRUD(Create, Read, Update, Delete)
 * operation on flat data and facilitates navigation to other related
 * screen.</b>.
 *
 * <p>
 * Features include:</p>
 * <ul>
 * <li>Display and manage flat details in a tabular format</li>
 * <li>Input field for flat details</li>
 * <li>Validation in each field</li>
 * <li>View,Add,Update and Delete flat record</li>
 * <li>Menu bar for easy navigation</li>
 * </ul>
 *
 * <p>
 * This class uses helper utilities class for table operations and
 * validation</p>
 *
 * @author Prajwal Luitel LMU ID 23048626
 */
public class ManageFlat extends javax.swing.JFrame {

    private List<FlatModel> flatList;
    private List<TenantModel> tenantList;

    /**
     * Creates new form ManageFlat and add the table data initially.
     */
    public ManageFlat() {
        initComponents();
        flatList = TableUtil.initialFlatData(flatList);
        flatList = new LinkedList<>(flatList);
        tenantList = TableUtil.initialTenantData(tenantList);
        TableUtil.designTable(tblManageFlat);
        TableUtil.loadListDataToTable(flatList, tblManageFlat);
    }

    /**
     * Creates new form ManageFlat populate table with the flat data obtained
     * from other JFrame and store tenant data in list.
     *
     * @param flatList flat data list from other JFrame
     * @param tenantList tenant data list from other JFrame
     */
    public ManageFlat(List<FlatModel> flatList, List<TenantModel> tenantList) {
        this.flatList = new LinkedList(flatList);
        this.tenantList = new ArrayList(tenantList);
        initComponents();
        TableUtil.designTable(tblManageFlat);
        TableUtil.loadListDataToTable(flatList, tblManageFlat);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGrpFlatStatus = new javax.swing.ButtonGroup();
        pnlManageFlatMain = new javax.swing.JPanel();
        pnlMenu = new javax.swing.JPanel();
        lblMenuTitleIcon = new javax.swing.JLabel();
        lblMenuTitle = new javax.swing.JLabel();
        lblMenuTitleBoder = new javax.swing.JLabel();
        pnlMenuHome = new javax.swing.JPanel();
        lblMenuHomeIcon = new javax.swing.JLabel();
        lblMenuHomeTitle = new javax.swing.JLabel();
        pnlMenuDashboard = new javax.swing.JPanel();
        lblMenuDashboardIcon = new javax.swing.JLabel();
        lblMenuDashboardTitle = new javax.swing.JLabel();
        lblMenuManageLeftBoder = new javax.swing.JLabel();
        lblMenuManageTitle = new javax.swing.JLabel();
        lblMenuManageRightBoder = new javax.swing.JLabel();
        pnlMenuManageFlat = new javax.swing.JPanel();
        lblMenuManageFlatIcon = new javax.swing.JLabel();
        lblMenuManageFlatTitle = new javax.swing.JLabel();
        pnlMenuManageTenant = new javax.swing.JPanel();
        lblMenuManageTenantIcon = new javax.swing.JLabel();
        lblMenuManageTenantTitle = new javax.swing.JLabel();
        lblMenuSortAndSearchLeftBoder = new javax.swing.JLabel();
        lblMenuSortAndSearchTitle = new javax.swing.JLabel();
        lblMenuSortAndSearchRightBoder = new javax.swing.JLabel();
        pnlMenuSortAndSearchFlat = new javax.swing.JPanel();
        lblMenuSortAndSearchFlatIcon = new javax.swing.JLabel();
        lblMenuSortAndSearchFlatTitle = new javax.swing.JLabel();
        pnlMenuSortAndSearchTenant = new javax.swing.JPanel();
        lblMenuSortAndSearchTenantIcon = new javax.swing.JLabel();
        lblMenuSortAndSearchTenantTitle = new javax.swing.JLabel();
        lblMenuSettingLeftBoder = new javax.swing.JLabel();
        lblMenuSettingTitle = new javax.swing.JLabel();
        lblMenuSettingRightBoder = new javax.swing.JLabel();
        pnlMenuSettingLogout = new javax.swing.JPanel();
        lblMenuSettingLogoutIcon = new javax.swing.JLabel();
        lblMenuSettingLogoutTitle = new javax.swing.JLabel();
        pnlMenuManageCleaningLog = new javax.swing.JPanel();
        lblMenuManageCleaningLogIcon = new javax.swing.JLabel();
        lblMenuManageCleaningLog = new javax.swing.JLabel();
        lblMenuBackgroundImage = new javax.swing.JLabel();
        lblViewFlatDetails = new javax.swing.JLabel();
        lblMangeFlatTitle = new javax.swing.JLabel();
        scrlpnMangeFlatTable = new javax.swing.JScrollPane();
        tblManageFlat = new javax.swing.JTable();
        lblMangeFlatClose = new javax.swing.JLabel();
        lblFlatId = new javax.swing.JLabel();
        lblColonFlatId = new javax.swing.JLabel();
        txtFldFlatId = new javax.swing.JTextField();
        lblColonSize = new javax.swing.JLabel();
        lblFlatStatus = new javax.swing.JLabel();
        txtFldSize = new javax.swing.JTextField();
        lblLivingRoom = new javax.swing.JLabel();
        lblColonPrice = new javax.swing.JLabel();
        sldLivingRoom = new javax.swing.JSlider();
        lblPrice = new javax.swing.JLabel();
        sldBedroom = new javax.swing.JSlider();
        lblBedroom = new javax.swing.JLabel();
        sldKitchen = new javax.swing.JSlider();
        lblKitchen = new javax.swing.JLabel();
        rdoBtnAvailable = new javax.swing.JRadioButton();
        rdoBtnNotAvailable = new javax.swing.JRadioButton();
        btnUpdate = new javax.swing.JButton();
        cmBxFurnishing = new javax.swing.JComboBox<>();
        lblSize = new javax.swing.JLabel();
        lblSqFt = new javax.swing.JLabel();
        lblFurnishing = new javax.swing.JLabel();
        txtFldPrice = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        lblErrorMsgFlatId = new javax.swing.JLabel();
        lblErrorMsgSize = new javax.swing.JLabel();
        lblErrorMsgPrice = new javax.swing.JLabel();
        lblErrorMsgFlatStatus = new javax.swing.JLabel();
        lblReset = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1706, 912));
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlManageFlatMain.setBackground(new java.awt.Color(232, 245, 255));
        pnlManageFlatMain.setMaximumSize(new java.awt.Dimension(1706, 912));
        pnlManageFlatMain.setMinimumSize(new java.awt.Dimension(1706, 912));
        pnlManageFlatMain.setPreferredSize(new java.awt.Dimension(1706, 912));
        pnlManageFlatMain.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlMenu.setBackground(new java.awt.Color(255, 255, 255));
        pnlMenu.setMaximumSize(new java.awt.Dimension(371, 912));
        pnlMenu.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblMenuTitleIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/technocomplex/resources/images/icons/Techno Complex White  Logo.png"))); // NOI18N
        pnlMenu.add(lblMenuTitleIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(-40, 10, 220, 150));

        lblMenuTitle.setFont(new java.awt.Font("Poppins", 2, 26)); // NOI18N
        lblMenuTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblMenuTitle.setText("Techno Complex");
        pnlMenu.add(lblMenuTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 30, 230, 80));

        lblMenuTitleBoder.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(255, 255, 255)));
        pnlMenu.add(lblMenuTitleBoder, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 370, 60));

        pnlMenuHome.setMaximumSize(new java.awt.Dimension(371, 60));
        pnlMenuHome.setMinimumSize(new java.awt.Dimension(371, 60));
        pnlMenuHome.setOpaque(false);
        pnlMenuHome.setPreferredSize(new java.awt.Dimension(371, 60));
        pnlMenuHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlMenuHomeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnlMenuHomeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlMenuHomeMouseExited(evt);
            }
        });
        pnlMenuHome.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblMenuHomeIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/technocomplex/resources/images/icons/Home.png"))); // NOI18N
        pnlMenuHome.add(lblMenuHomeIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 0, 70, 50));

        lblMenuHomeTitle.setFont(new java.awt.Font("Poppins", 0, 28)); // NOI18N
        lblMenuHomeTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblMenuHomeTitle.setText("Home");
        pnlMenuHome.add(lblMenuHomeTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, -1, -1));

        pnlMenu.add(pnlMenuHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 180, -1, -1));

        pnlMenuDashboard.setMaximumSize(new java.awt.Dimension(371, 60));
        pnlMenuDashboard.setMinimumSize(new java.awt.Dimension(371, 60));
        pnlMenuDashboard.setOpaque(false);
        pnlMenuDashboard.setPreferredSize(new java.awt.Dimension(371, 60));
        pnlMenuDashboard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlMenuDashboardMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnlMenuDashboardMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlMenuDashboardMouseExited(evt);
            }
        });
        pnlMenuDashboard.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblMenuDashboardIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/technocomplex/resources/images/icons/Dashboard.png"))); // NOI18N
        pnlMenuDashboard.add(lblMenuDashboardIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 6, -1, 48));

        lblMenuDashboardTitle.setFont(new java.awt.Font("Poppins", 0, 28)); // NOI18N
        lblMenuDashboardTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblMenuDashboardTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMenuDashboardTitle.setText("Dashboard");
        pnlMenuDashboard.add(lblMenuDashboardTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 6, -1, -1));

        pnlMenu.add(pnlMenuDashboard, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 240, -1, -1));

        lblMenuManageLeftBoder.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(255, 255, 255)));
        pnlMenu.add(lblMenuManageLeftBoder, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 310, 130, 10));

        lblMenuManageTitle.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblMenuManageTitle.setForeground(new java.awt.Color(191, 191, 191));
        lblMenuManageTitle.setText("Manage");
        pnlMenu.add(lblMenuManageTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 310, 90, 20));

        lblMenuManageRightBoder.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(255, 255, 255)));
        pnlMenu.add(lblMenuManageRightBoder, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 310, 150, 10));

        pnlMenuManageFlat.setBackground(new java.awt.Color(97,97,97,120));
        pnlMenuManageFlat.setMaximumSize(new java.awt.Dimension(371, 60));
        pnlMenuManageFlat.setMinimumSize(new java.awt.Dimension(371, 60));
        pnlMenuManageFlat.setPreferredSize(new java.awt.Dimension(371, 60));
        pnlMenuManageFlat.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblMenuManageFlatIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/technocomplex/resources/images/icons/Manage Flat.png"))); // NOI18N
        pnlMenuManageFlat.add(lblMenuManageFlatIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 0, -1, 54));

        lblMenuManageFlatTitle.setFont(new java.awt.Font("Poppins", 0, 28)); // NOI18N
        lblMenuManageFlatTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblMenuManageFlatTitle.setText("Flat");
        pnlMenuManageFlat.add(lblMenuManageFlatTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 6, -1, -1));

        pnlMenu.add(pnlMenuManageFlat, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 340, -1, -1));

        pnlMenuManageTenant.setMaximumSize(new java.awt.Dimension(371, 60));
        pnlMenuManageTenant.setMinimumSize(new java.awt.Dimension(371, 60));
        pnlMenuManageTenant.setOpaque(false);
        pnlMenuManageTenant.setPreferredSize(new java.awt.Dimension(371, 60));
        pnlMenuManageTenant.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlMenuManageTenantMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnlMenuManageTenantMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlMenuManageTenantMouseExited(evt);
            }
        });
        pnlMenuManageTenant.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblMenuManageTenantIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/technocomplex/resources/images/icons/Manage Tenant.png"))); // NOI18N
        pnlMenuManageTenant.add(lblMenuManageTenantIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 6, -1, 48));

        lblMenuManageTenantTitle.setFont(new java.awt.Font("Poppins", 0, 28)); // NOI18N
        lblMenuManageTenantTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblMenuManageTenantTitle.setText("Tenant");
        pnlMenuManageTenant.add(lblMenuManageTenantTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 11, -1, -1));

        pnlMenu.add(pnlMenuManageTenant, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 400, -1, -1));

        lblMenuSortAndSearchLeftBoder.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(255, 255, 255)));
        pnlMenu.add(lblMenuSortAndSearchLeftBoder, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 520, 100, 10));

        lblMenuSortAndSearchTitle.setFont(new java.awt.Font("Poppins", 0, 16)); // NOI18N
        lblMenuSortAndSearchTitle.setForeground(new java.awt.Color(191, 191, 191));
        lblMenuSortAndSearchTitle.setText("Sort and Search");
        pnlMenu.add(lblMenuSortAndSearchTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 520, 160, 20));

        lblMenuSortAndSearchRightBoder.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(255, 255, 255)));
        pnlMenu.add(lblMenuSortAndSearchRightBoder, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 520, 120, 10));

        pnlMenuSortAndSearchFlat.setMaximumSize(new java.awt.Dimension(371, 60));
        pnlMenuSortAndSearchFlat.setMinimumSize(new java.awt.Dimension(371, 60));
        pnlMenuSortAndSearchFlat.setOpaque(false);
        pnlMenuSortAndSearchFlat.setPreferredSize(new java.awt.Dimension(371, 60));
        pnlMenuSortAndSearchFlat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlMenuSortAndSearchFlatMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnlMenuSortAndSearchFlatMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlMenuSortAndSearchFlatMouseExited(evt);
            }
        });
        pnlMenuSortAndSearchFlat.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblMenuSortAndSearchFlatIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/technocomplex/resources/images/icons/Sort and Search.png"))); // NOI18N
        pnlMenuSortAndSearchFlat.add(lblMenuSortAndSearchFlatIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 0, 58, 51));

        lblMenuSortAndSearchFlatTitle.setFont(new java.awt.Font("Poppins", 0, 28)); // NOI18N
        lblMenuSortAndSearchFlatTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblMenuSortAndSearchFlatTitle.setText("Flat");
        pnlMenuSortAndSearchFlat.add(lblMenuSortAndSearchFlatTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 8, -1, -1));

        pnlMenu.add(pnlMenuSortAndSearchFlat, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 550, -1, -1));

        pnlMenuSortAndSearchTenant.setMaximumSize(new java.awt.Dimension(371, 60));
        pnlMenuSortAndSearchTenant.setMinimumSize(new java.awt.Dimension(371, 60));
        pnlMenuSortAndSearchTenant.setOpaque(false);
        pnlMenuSortAndSearchTenant.setPreferredSize(new java.awt.Dimension(371, 60));
        pnlMenuSortAndSearchTenant.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlMenuSortAndSearchTenantMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnlMenuSortAndSearchTenantMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlMenuSortAndSearchTenantMouseExited(evt);
            }
        });
        pnlMenuSortAndSearchTenant.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblMenuSortAndSearchTenantIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/technocomplex/resources/images/icons/Sort and Search.png"))); // NOI18N
        pnlMenuSortAndSearchTenant.add(lblMenuSortAndSearchTenantIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 0, 58, 51));

        lblMenuSortAndSearchTenantTitle.setFont(new java.awt.Font("Poppins", 0, 28)); // NOI18N
        lblMenuSortAndSearchTenantTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblMenuSortAndSearchTenantTitle.setText("Tenant");
        pnlMenuSortAndSearchTenant.add(lblMenuSortAndSearchTenantTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 8, -1, -1));

        pnlMenu.add(pnlMenuSortAndSearchTenant, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 610, -1, -1));

        lblMenuSettingLeftBoder.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(255, 255, 255)));
        pnlMenu.add(lblMenuSettingLeftBoder, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 670, 130, 10));

        lblMenuSettingTitle.setFont(new java.awt.Font("Poppins", 0, 16)); // NOI18N
        lblMenuSettingTitle.setForeground(new java.awt.Color(191, 191, 191));
        lblMenuSettingTitle.setText("Setting");
        pnlMenu.add(lblMenuSettingTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 670, 70, 20));

        lblMenuSettingRightBoder.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(255, 255, 255)));
        pnlMenu.add(lblMenuSettingRightBoder, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 670, 160, 10));

        pnlMenuSettingLogout.setMaximumSize(new java.awt.Dimension(371, 60));
        pnlMenuSettingLogout.setMinimumSize(new java.awt.Dimension(371, 60));
        pnlMenuSettingLogout.setOpaque(false);
        pnlMenuSettingLogout.setPreferredSize(new java.awt.Dimension(371, 60));
        pnlMenuSettingLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlMenuSettingLogoutMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnlMenuSettingLogoutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlMenuSettingLogoutMouseExited(evt);
            }
        });
        pnlMenuSettingLogout.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblMenuSettingLogoutIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/technocomplex/resources/images/icons/Log Out.png"))); // NOI18N
        pnlMenuSettingLogout.add(lblMenuSettingLogoutIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, 58, 50));

        lblMenuSettingLogoutTitle.setFont(new java.awt.Font("Poppins", 0, 28)); // NOI18N
        lblMenuSettingLogoutTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblMenuSettingLogoutTitle.setText("Log Out");
        pnlMenuSettingLogout.add(lblMenuSettingLogoutTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 8, -1, -1));

        pnlMenu.add(pnlMenuSettingLogout, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 690, -1, -1));

        pnlMenuManageCleaningLog.setMinimumSize(new java.awt.Dimension(371, 60));
        pnlMenuManageCleaningLog.setOpaque(false);
        pnlMenuManageCleaningLog.setPreferredSize(new java.awt.Dimension(371, 60));
        pnlMenuManageCleaningLog.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlMenuManageCleaningLogMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnlMenuManageCleaningLogMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnlMenuManageCleaningLogMouseExited(evt);
            }
        });
        pnlMenuManageCleaningLog.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblMenuManageCleaningLogIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/technocomplex/resources/images/icons/Cleaning Log.png"))); // NOI18N
        pnlMenuManageCleaningLog.add(lblMenuManageCleaningLogIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 0, -1, 60));

        lblMenuManageCleaningLog.setFont(new java.awt.Font("Poppins", 0, 28)); // NOI18N
        lblMenuManageCleaningLog.setForeground(new java.awt.Color(255, 255, 255));
        lblMenuManageCleaningLog.setText("Cleaning Log");
        pnlMenuManageCleaningLog.add(lblMenuManageCleaningLog, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 11, -1, -1));

        pnlMenu.add(pnlMenuManageCleaningLog, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 460, -1, -1));

        lblMenuBackgroundImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/technocomplex/resources/images/background/Menu.png"))); // NOI18N
        pnlMenu.add(lblMenuBackgroundImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pnlManageFlatMain.add(pnlMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        lblViewFlatDetails.setFont(new java.awt.Font("Poppins", 0, 38)); // NOI18N
        lblViewFlatDetails.setForeground(new java.awt.Color(102, 153, 255));
        lblViewFlatDetails.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblViewFlatDetails.setText("View Flat Details");
        pnlManageFlatMain.add(lblViewFlatDetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 10, 1210, 60));

        lblMangeFlatTitle.setFont(new java.awt.Font("Poppins", 0, 36)); // NOI18N
        lblMangeFlatTitle.setForeground(new java.awt.Color(102, 153, 255));
        lblMangeFlatTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMangeFlatTitle.setText("Manage Flat");
        pnlManageFlatMain.add(lblMangeFlatTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 340, 1210, 60));

        scrlpnMangeFlatTable.setBackground(new java.awt.Color(0, 255, 204));
        scrlpnMangeFlatTable.setForeground(new java.awt.Color(255, 255, 255));
        scrlpnMangeFlatTable.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        tblManageFlat.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        tblManageFlat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "FlatId", "Price", "Size", "Livingroom", "Bedroom", "Kitchen", "Furnish", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Short.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Byte.class, java.lang.Byte.class, java.lang.Byte.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblManageFlat.setRowHeight(30);
        tblManageFlat.getTableHeader().setReorderingAllowed(false);
        scrlpnMangeFlatTable.setViewportView(tblManageFlat);
        if (tblManageFlat.getColumnModel().getColumnCount() > 0) {
            tblManageFlat.getColumnModel().getColumn(0).setResizable(false);
            tblManageFlat.getColumnModel().getColumn(1).setResizable(false);
            tblManageFlat.getColumnModel().getColumn(2).setResizable(false);
            tblManageFlat.getColumnModel().getColumn(3).setResizable(false);
            tblManageFlat.getColumnModel().getColumn(4).setResizable(false);
            tblManageFlat.getColumnModel().getColumn(5).setResizable(false);
            tblManageFlat.getColumnModel().getColumn(6).setResizable(false);
            tblManageFlat.getColumnModel().getColumn(7).setResizable(false);
        }

        pnlManageFlatMain.add(scrlpnMangeFlatTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 80, 1210, 250));

        lblMangeFlatClose.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblMangeFlatClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/technocomplex/resources/images/icons/Close.png"))); // NOI18N
        lblMangeFlatClose.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblMangeFlatClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblMangeFlatCloseMouseClicked(evt);
            }
        });
        pnlManageFlatMain.add(lblMangeFlatClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(1650, 0, 50, 50));

        lblFlatId.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblFlatId.setText("Flat Id   ");
        pnlManageFlatMain.add(lblFlatId, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 430, 70, -1));

        lblColonFlatId.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblColonFlatId.setText(":");
        pnlManageFlatMain.add(lblColonFlatId, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 430, 10, -1));
        pnlManageFlatMain.add(txtFldFlatId, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 420, 150, 40));

        lblColonSize.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblColonSize.setText(":");
        pnlManageFlatMain.add(lblColonSize, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 570, 10, -1));

        lblFlatStatus.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblFlatStatus.setText("Flat Status");
        pnlManageFlatMain.add(lblFlatStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 660, -1, -1));
        pnlManageFlatMain.add(txtFldSize, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 570, 290, 40));

        lblLivingRoom.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblLivingRoom.setText("Living Room");
        pnlManageFlatMain.add(lblLivingRoom, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 430, -1, -1));

        lblColonPrice.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblColonPrice.setText(":");
        pnlManageFlatMain.add(lblColonPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 500, 10, -1));

        sldLivingRoom.setBackground(new java.awt.Color(204, 204, 204));
        sldLivingRoom.setForeground(new java.awt.Color(0, 51, 255));
        sldLivingRoom.setMajorTickSpacing(1);
        sldLivingRoom.setMaximum(4);
        sldLivingRoom.setMinimum(1);
        sldLivingRoom.setPaintLabels(true);
        sldLivingRoom.setPaintTicks(true);
        sldLivingRoom.setSnapToTicks(true);
        sldLivingRoom.setToolTipText("");
        sldLivingRoom.setValue(1);
        sldLivingRoom.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pnlManageFlatMain.add(sldLivingRoom, new org.netbeans.lib.awtextra.AbsoluteConstraints(1330, 420, 250, -1));

        lblPrice.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblPrice.setText("Price");
        pnlManageFlatMain.add(lblPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 500, -1, -1));

        sldBedroom.setForeground(new java.awt.Color(0, 51, 255));
        sldBedroom.setMajorTickSpacing(1);
        sldBedroom.setMaximum(6);
        sldBedroom.setMinimum(1);
        sldBedroom.setPaintLabels(true);
        sldBedroom.setPaintTicks(true);
        sldBedroom.setSnapToTicks(true);
        sldBedroom.setValue(1);
        sldBedroom.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pnlManageFlatMain.add(sldBedroom, new org.netbeans.lib.awtextra.AbsoluteConstraints(1330, 500, 250, -1));

        lblBedroom.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblBedroom.setText("Bedroom");
        pnlManageFlatMain.add(lblBedroom, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 500, -1, -1));

        sldKitchen.setBackground(new java.awt.Color(204, 204, 204));
        sldKitchen.setForeground(new java.awt.Color(0, 51, 255));
        sldKitchen.setMajorTickSpacing(1);
        sldKitchen.setMaximum(3);
        sldKitchen.setMinimum(1);
        sldKitchen.setPaintLabels(true);
        sldKitchen.setPaintTicks(true);
        sldKitchen.setSnapToTicks(true);
        sldKitchen.setValue(1);
        sldKitchen.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pnlManageFlatMain.add(sldKitchen, new org.netbeans.lib.awtextra.AbsoluteConstraints(1330, 580, 250, -1));

        lblKitchen.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblKitchen.setText("Kitchen");
        pnlManageFlatMain.add(lblKitchen, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 570, -1, -1));

        btnGrpFlatStatus.add(rdoBtnAvailable);
        rdoBtnAvailable.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        rdoBtnAvailable.setText("Available");
        pnlManageFlatMain.add(rdoBtnAvailable, new org.netbeans.lib.awtextra.AbsoluteConstraints(1330, 660, 110, 40));

        btnGrpFlatStatus.add(rdoBtnNotAvailable);
        rdoBtnNotAvailable.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        rdoBtnNotAvailable.setText("Not Available");
        pnlManageFlatMain.add(rdoBtnNotAvailable, new org.netbeans.lib.awtextra.AbsoluteConstraints(1460, 660, 130, 40));

        btnUpdate.setBackground(new java.awt.Color(102, 153, 255));
        btnUpdate.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        pnlManageFlatMain.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 780, 120, 60));

        cmBxFurnishing.setBackground(new java.awt.Color(102, 153, 255));
        cmBxFurnishing.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        cmBxFurnishing.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Furnished", "Unfurnished" }));
        cmBxFurnishing.setToolTipText("");
        pnlManageFlatMain.add(cmBxFurnishing, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 660, 120, 30));

        lblSize.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblSize.setText("Sq. Ft");
        pnlManageFlatMain.add(lblSize, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 580, -1, -1));

        lblSqFt.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblSqFt.setText("Size");
        pnlManageFlatMain.add(lblSqFt, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 570, -1, -1));

        lblFurnishing.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblFurnishing.setText("Furnishing");
        pnlManageFlatMain.add(lblFurnishing, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 660, -1, -1));
        pnlManageFlatMain.add(txtFldPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 500, 290, 40));

        btnDelete.setBackground(new java.awt.Color(102, 153, 255));
        btnDelete.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        pnlManageFlatMain.add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 780, 120, 60));

        btnAdd.setBackground(new java.awt.Color(102, 153, 255));
        btnAdd.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        pnlManageFlatMain.add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 780, 120, 60));

        lblErrorMsgFlatId.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        lblErrorMsgFlatId.setForeground(new java.awt.Color(255, 0, 0));
        lblErrorMsgFlatId.setMaximumSize(new java.awt.Dimension(250, 250));
        pnlManageFlatMain.add(lblErrorMsgFlatId, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 410, -1, -1));

        lblErrorMsgSize.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        lblErrorMsgSize.setForeground(new java.awt.Color(255, 0, 0));
        pnlManageFlatMain.add(lblErrorMsgSize, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 550, -1, -1));

        lblErrorMsgPrice.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        lblErrorMsgPrice.setForeground(new java.awt.Color(255, 0, 0));
        pnlManageFlatMain.add(lblErrorMsgPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 480, -1, -1));

        lblErrorMsgFlatStatus.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        lblErrorMsgFlatStatus.setForeground(new java.awt.Color(255, 0, 0));
        pnlManageFlatMain.add(lblErrorMsgFlatStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 640, -1, -1));

        lblReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/technocomplex/resources/images/icons/Reset.png"))); // NOI18N
        lblReset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblResetMouseClicked(evt);
            }
        });
        pnlManageFlatMain.add(lblReset, new org.netbeans.lib.awtextra.AbsoluteConstraints(1200, 770, -1, -1));

        getContentPane().add(pnlManageFlatMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Turn the background light and show underline for label when mouse entered
     * the menu item i.e hover effect
     *
     * @param menuPanel the menu item panel in which light background (hover
     * effect) is to be shown
     * @param menuPanelLabel the menu title label in which underline label
     * (hover effect) is to be shown
     */
    private void mouseEnter(JPanel menuPanel, JLabel menuPanelLabel) {
        menuPanel.setBackground(null);
        menuPanel.setBackground(new Color(192, 213, 255));
        menuPanel.setOpaque(true);
        menuPanelLabel.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
    }

    /**
     * Remove the hover effect when mouse leave the menu item.
     *
     * @param menuPanel the menu item panel to turn it back to normal
     * @param menuPanelLabel the menu title label to turn it back to normal
     *
     */
    private void mouseExit(JPanel menuPanel, JLabel menuPanelLabel) {
        menuPanel.setBackground(null);
        menuPanel.setOpaque(false);
        menuPanelLabel.setBorder(null);
    }

    /**
     * Handles the mouse click event on the Menu Home panel. Direct the user to
     * Home screen and dispose this screen.
     *
     * @param evt the event triggered by clicking on the Menu Home panel
     */
    private void pnlMenuHomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuHomeMouseClicked
        new Home(flatList, tenantList).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_pnlMenuHomeMouseClicked

    /**
     * Handles the mouse Enter event on the Menu Home panel. Hover effect on
     * Menu Home panel is created.
     *
     * @param evt the event triggered by entering on the Menu Home panel.
     */
    private void pnlMenuHomeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuHomeMouseEntered
        mouseEnter(pnlMenuHome, lblMenuHomeTitle);
    }//GEN-LAST:event_pnlMenuHomeMouseEntered

    /**
     * Handles the mouse Exit event on the Menu Home panel. Menu Home panel is
     * turned back to normal by removing hover effect.
     *
     * @param evt the event triggered by exiting on the Menu Home panel.
     */
    private void pnlMenuHomeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuHomeMouseExited
        mouseExit(pnlMenuHome, lblMenuHomeTitle);
    }//GEN-LAST:event_pnlMenuHomeMouseExited

    /**
     * Handles the mouse click event on the Menu Manage Tenant panel. Direct the
     * user to Manage Tenant screen and dispose this screen.
     *
     * @param evt the event triggered by clicking on the Menu Manage Tenant
     * panel
     */
    private void pnlMenuManageTenantMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuManageTenantMouseClicked
        new ManageTenant(flatList, tenantList).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_pnlMenuManageTenantMouseClicked

    /**
     * Handles the mouse Enter event on the Menu Manage Tenant panel. Hover
     * effect on Menu Manage Tenant panel is created.
     *
     * @param evt the event triggered by entering on the Menu Manage Tenant
     * panel.
     */
    private void pnlMenuManageTenantMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuManageTenantMouseEntered
        mouseEnter(pnlMenuManageTenant, lblMenuManageTenantTitle);
    }//GEN-LAST:event_pnlMenuManageTenantMouseEntered

    /**
     * Handles the mouse Exit event on the Menu Manage Tenant panel. Menu Manage
     * Tenant panel is turned back to normal by removing hover effect.
     *
     * @param evt the event triggered by exiting on the Menu Manage Tenant
     * panel.
     */
    private void pnlMenuManageTenantMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuManageTenantMouseExited
        mouseExit(pnlMenuManageTenant, lblMenuManageTenantTitle);
    }//GEN-LAST:event_pnlMenuManageTenantMouseExited

    /**
     * Handles the mouse click event on the Menu Cleaning Log panel. Direct the
     * user to Cleaning Log screen and dispose this screen.
     *
     * @param evt the event triggered by clicking on the Menu Cleaning Log panel
     */
    private void pnlMenuManageCleaningLogMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuManageCleaningLogMouseClicked
        new CleaningLog(flatList, tenantList).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_pnlMenuManageCleaningLogMouseClicked

    /**
     * Handles the mouse Enter event on the Menu Cleaning Log panel. Hover
     * effect on Menu Cleaning Log panel is created.
     *
     * @param evt the event triggered by entering on the Menu Cleaning Log
     * panel.
     */
    private void pnlMenuManageCleaningLogMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuManageCleaningLogMouseEntered
        // TODO add your handling code here:
        mouseEnter(pnlMenuManageCleaningLog, lblMenuManageCleaningLog);
    }//GEN-LAST:event_pnlMenuManageCleaningLogMouseEntered

    /**
     * Handles the mouse Exit event on the Menu Cleaning Log panel. Menu
     * Cleaning Log panel is turned back to normal by removing hover effect.
     *
     * @param evt the event triggered by exiting on the MeCleaning Lognu
     * Dashboard panel.
     */
    private void pnlMenuManageCleaningLogMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuManageCleaningLogMouseExited
        mouseExit(pnlMenuManageCleaningLog, lblMenuManageCleaningLog);
    }//GEN-LAST:event_pnlMenuManageCleaningLogMouseExited

    /**
     * Handles the mouse click event on the Menu Sort and Search Flat panel.
     * Direct the user to Sort and Search Flat screen and dispose this screen.
     *
     * @param evt the event triggered by clicking on the Menu Sort and Search
     * Flat panel
     */
    private void pnlMenuSortAndSearchFlatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuSortAndSearchFlatMouseClicked
        new SortAndSearchFlat(flatList, tenantList).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_pnlMenuSortAndSearchFlatMouseClicked

    /**
     * Handles the mouse Enter event on the Menu Sort and Search Flat panel.
     * Hover effect on Menu Sort and Search Flat panel is created.
     *
     * @param evt the event triggered by entering on the Menu Sort and Search
     * Flat panel.
     */
    private void pnlMenuSortAndSearchFlatMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuSortAndSearchFlatMouseEntered
        mouseEnter(pnlMenuSortAndSearchFlat, lblMenuSortAndSearchFlatTitle);
    }//GEN-LAST:event_pnlMenuSortAndSearchFlatMouseEntered

    /**
     * Handles the mouse Exit event on the Menu Sort and Search Flat panel. Menu
     * Sort and Search Flat panel is turned back to normal by removing hover
     * effect.
     *
     * @param evt the event triggered by exiting on the Menu Sort and Search
     * Flat panel.
     */
    private void pnlMenuSortAndSearchFlatMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuSortAndSearchFlatMouseExited
        mouseExit(pnlMenuSortAndSearchFlat, lblMenuSortAndSearchFlatTitle);
    }//GEN-LAST:event_pnlMenuSortAndSearchFlatMouseExited

    /**
     * Handles the mouse click event on the Menu Sort and Search Tenant panel.
     * Direct the user to Sort and Search Tenant screen and dispose this screen.
     *
     * @param evt the event triggered by clicking on the Menu Sort and Search
     * Tenant panel
     */
    private void pnlMenuSortAndSearchTenantMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuSortAndSearchTenantMouseClicked
        new SortAndSearchTenant(flatList, tenantList).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_pnlMenuSortAndSearchTenantMouseClicked

    /**
     * Handles the mouse Enter event on the Menu Sort and Search Tenant panel.
     * Hover effect on Menu Sort and Search Tenant panel is created.
     *
     * @param evt the event triggered by entering on the Menu Sort and Search
     * Tenant panel.
     */
    private void pnlMenuSortAndSearchTenantMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuSortAndSearchTenantMouseEntered
        mouseEnter(pnlMenuSortAndSearchTenant, lblMenuSortAndSearchTenantTitle);
    }//GEN-LAST:event_pnlMenuSortAndSearchTenantMouseEntered

    /**
     * Handles the mouse Exit event on the Menu Sort and Search Tenant panel.
     * Menu Sort and Search Tenant panel is turned back to normal by removing
     * hover effect.
     *
     * @param evt the event triggered by exiting on the Menu Sort and Search
     * Tenant panel.
     */
    private void pnlMenuSortAndSearchTenantMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuSortAndSearchTenantMouseExited
        mouseExit(pnlMenuSortAndSearchTenant, lblMenuSortAndSearchTenantTitle);
    }//GEN-LAST:event_pnlMenuSortAndSearchTenantMouseExited

    /**
     * Handles the mouse click event on the Menu Log Out panel. Direct the user
     * to Log In screen and dispose this screen.
     *
     * @param evt the event triggered by clicking on the Menu Log Out panel
     */
    private void pnlMenuSettingLogoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuSettingLogoutMouseClicked
        new LogIn().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_pnlMenuSettingLogoutMouseClicked

    /**
     * Handles the mouse Enter event on the Menu Log Out panel. Hover effect on
     * Menu Log Out panel is created.
     *
     * @param evt the event triggered by entering on the Menu Dashboard panel.
     */
    private void pnlMenuSettingLogoutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuSettingLogoutMouseEntered
        mouseEnter(pnlMenuSettingLogout, lblMenuSettingLogoutTitle);
    }//GEN-LAST:event_pnlMenuSettingLogoutMouseEntered

    /**
     * Handles the mouse Exit event on the Menu Log Out panel. Menu Log Out
     * panel is turned back to normal by removing hover effect.
     *
     * @param evt the event triggered by exiting on the Menu Log Out panel.
     */
    private void pnlMenuSettingLogoutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuSettingLogoutMouseExited
        mouseExit(pnlMenuSettingLogout, lblMenuSettingLogoutTitle);
    }//GEN-LAST:event_pnlMenuSettingLogoutMouseExited

    /**
     * Handles the mouse click event on the Menu Dashboard panel. Direct the
     * user to Dashboard screen and dispose this screen.
     *
     * @param evt the event triggered by clicking on the Menu Dashboard panel
     */
    private void pnlMenuDashboardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuDashboardMouseClicked
        new Dashboard(flatList, tenantList).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_pnlMenuDashboardMouseClicked

    /**
     * Handles the mouse Enter event on the Menu Dashboard panel. Hover effect
     * on Menu Dashboard panel is created.
     *
     * @param evt the event triggered by entering on the Menu Dashboard panel.
     */
    private void pnlMenuDashboardMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuDashboardMouseEntered
        mouseEnter(pnlMenuDashboard, lblMenuDashboardTitle);
    }//GEN-LAST:event_pnlMenuDashboardMouseEntered

    /**
     * Handles the mouse Exit event on the Menu Dashboard panel. Menu Dashboard
     * panel is turned back to normal by removing hover effect.
     *
     * @param evt the event triggered by exiting on the Menu Dashboard panel.
     */
    private void pnlMenuDashboardMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMenuDashboardMouseExited
        mouseExit(pnlMenuDashboard, lblMenuDashboardTitle);
    }//GEN-LAST:event_pnlMenuDashboardMouseExited

    /**
     * Handles the mouse click event on the close label in the ManageFlat
     * window. Prompts the user with a confirmation dialog to close the system.
     * If the user confirms, the application is terminated.
     *
     * @param evt the event triggered by clicking on the close label
     */
    private void lblMangeFlatCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMangeFlatCloseMouseClicked
        int closeSystem = JOptionPane.showConfirmDialog(pnlManageFlatMain, "Do you want to close the \nTecnho Management System", "Close System", JOptionPane.YES_NO_OPTION);
        if (closeSystem == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_lblMangeFlatCloseMouseClicked

    /**
     * Event handler for the Add button action. Validates input fields, creates
     * a new flat record if valid, and checks for duplicate flat Id before
     * adding the record to the flat list.
     *
     * @param evt the ActionEvent triggered by the Add button
     */
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        boolean isValid = true;
        // Validate flatId
        isValid &= ValidationUtil.validateField(
                txtFldFlatId, "Flat ID", lblErrorMsgFlatId, "Must be 3-digit number.",
                ValidationUtil.isValidId(txtFldFlatId.getText().trim())
        );
        // Validate price
        try {
            int price = Integer.parseInt(txtFldPrice.getText().trim());
            isValid &= ValidationUtil.validateField(
                    txtFldPrice, "Price", lblErrorMsgPrice, "In between 20,000 to 5,00,000",
                    ValidationUtil.isValidPrice(price)
            );
        } catch (NumberFormatException e) {
            isValid = ValidationUtil.validateField(
                    txtFldPrice, "Price", lblErrorMsgPrice, "In between 20,000 to 5,00,000",
                    false
            );
        }
        // Validate size
        try {
            int size = Integer.parseInt(txtFldSize.getText().trim());
            isValid &= ValidationUtil.validateField(
                    txtFldSize, "Size", lblErrorMsgSize, "In between 350 to 25,00 sq.ft",
                    ValidationUtil.isValidSize(size)
            );
        } catch (NumberFormatException e) {
            isValid = ValidationUtil.validateField(
                    txtFldSize, "Size", lblErrorMsgSize, "In between 350 to 25,00 sq.ft",
                    false
            );

        }
        // validate Avaiable status
        if (!rdoBtnAvailable.isSelected() && !rdoBtnNotAvailable.isSelected()) {
            isValid &= false;
            lblErrorMsgFlatStatus.setText("Staus canont be empty");
        } else {
            lblErrorMsgFlatStatus.setText(null);
        }

        if (isValid) {
            // Create a Flat instance
            FlatModel newFlat = new FlatModel(
                    Short.parseShort(txtFldFlatId.getText().trim()),
                    Integer.parseInt(txtFldPrice.getText().trim()),
                    Integer.parseInt(txtFldSize.getText().trim()),
                    (byte) sldLivingRoom.getValue(),
                    (byte) sldBedroom.getValue(),
                    (byte) sldKitchen.getValue(),
                    (String) cmBxFurnishing.getSelectedItem(),
                    rdoBtnAvailable.isSelected() ? "Available" : "Not Available"
            );
            // Check for duplicate flat Id
            if (checkDuplicateFlat(newFlat)) {
                txtFldFlatId.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0), 2));
                JOptionPane.showMessageDialog(this, "Flat ID already exists.", "Duplicate Entry", JOptionPane.WARNING_MESSAGE);
            } else {
                // Add the student if no duplicate is found
                flatList.add(newFlat);
                // clear the form
                clearForm();

                TableUtil.addFLatDataToTable(newFlat, tblManageFlat);
                txtFldFlatId.setBorder(null);
                JOptionPane.showMessageDialog(this, "Flat details has been added successfully.", "Successfully Added", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnAddActionPerformed

    /**
     * Event handler for the Update button action. Validates input fields,
     * Update existing flat record if valid, by matching the flat id before
     * adding the record to the student list.
     *
     * @param evt the ActionEvent triggered by the Update button
     */
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        boolean isValid = true;
        // Validate flatId
        isValid &= ValidationUtil.validateField(
                txtFldFlatId, "Flat ID", lblErrorMsgFlatId, "Must be 3-digit number.",
                ValidationUtil.isValidId(txtFldFlatId.getText().trim())
        );
        // Validate price
        try {
            int price = Integer.parseInt(txtFldPrice.getText().trim());
            isValid &= ValidationUtil.validateField(
                    txtFldPrice, "Price", lblErrorMsgPrice, "In between 20,000 to 5,00,000",
                    ValidationUtil.isValidPrice(price)
            );
        } catch (NumberFormatException e) {
            isValid = ValidationUtil.validateField(
                    txtFldPrice, "Price", lblErrorMsgPrice, "In between 20,000 to 5,00,000",
                    false
            );
        }
        // Validate size
        try {
            int size = Integer.parseInt(txtFldSize.getText().trim());
            isValid &= ValidationUtil.validateField(
                    txtFldSize, "Size", lblErrorMsgSize, "In between 350 to 25,00 sq.ft",
                    ValidationUtil.isValidSize(size)
            );
        } catch (NumberFormatException e) {
            isValid = ValidationUtil.validateField(
                    txtFldSize, "Size", lblErrorMsgSize, "In between 350 to 25,00 sq.ft",
                    false
            );
        }
        // Validate flatStatus
        if (!rdoBtnAvailable.isSelected() && !rdoBtnNotAvailable.isSelected()) {
            isValid &= false;
            lblErrorMsgFlatStatus.setText("Staus canont be empty");
        } else {
            lblErrorMsgFlatStatus.setText(null);
        }
        if (isValid) {
            // Create a flatModel instance
            FlatModel updatedFlat = new FlatModel(
                    Short.parseShort(txtFldFlatId.getText().trim()),
                    Integer.parseInt(txtFldPrice.getText().trim()),
                    Integer.parseInt(txtFldSize.getText().trim()),
                    (byte) sldLivingRoom.getValue(),
                    (byte) sldBedroom.getValue(),
                    (byte) sldKitchen.getValue(),
                    (String) cmBxFurnishing.getSelectedItem(),
                    rdoBtnAvailable.isSelected() ? "Available" : "Not Available"
            );
            boolean isUpdated = false;

            // Find and update the flat in the list
            for (int i = 0; i < flatList.size(); i++) {
                if (flatList.get(i).getFlatId() == updatedFlat.getFlatId()) {
                    flatList.set(i, updatedFlat);
                    isUpdated = true;
                    break;
                }
            }
            // Update status to the user
            if (isUpdated) {
                // clear the form
                clearForm();
                // refresh the table
                TableUtil.loadListDataToTable(flatList, tblManageFlat);
                JOptionPane.showMessageDialog(this, "Flat details updated successfully.", "Update Successful", JOptionPane.INFORMATION_MESSAGE);
            } else {
                txtFldFlatId.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0), 2));
                JOptionPane.showMessageDialog(this, "Flat ID not found.", "Update Failed", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    /**
     * Event handler for the Delete button action. Select row from the table by
     * user selection and ask for confirmation before deleting
     *
     * @param evt the ActionEvent triggered by the delete button
     */
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // Get the selected row index
        int selectedRow = tblManageFlat.getSelectedRow();

        if (selectedRow == -1) {
            // No row is selected
            JOptionPane.showMessageDialog(this, "Please select a flat to delete by clicking on a row in the table.", "No Selection", JOptionPane.WARNING_MESSAGE);
        } else {
            // Confirm deletion
            int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete the selected flat?", "Confirm Deletion", JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
                // Remove the flat from the list
                flatList.remove(selectedRow);

                // Refresh the table
                TableUtil.loadListDataToTable(flatList, tblManageFlat);

                // Clear the form
                clearForm();

                JOptionPane.showMessageDialog(this, "Flat deleted successfully.", "Deleted", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * Clears all input fields, error message and red border from the tenant
     * form. Resets each field's value,error message and border to default.
     *
     * @param evt the MouseEvent triggered by the Reset Label
     */
    private void lblResetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblResetMouseClicked
        clearForm();
        txtFldFlatId.setBorder(null);
        lblErrorMsgFlatId.setText(null);
        txtFldSize.setBorder(null);
        lblErrorMsgSize.setText(null);
        txtFldPrice.setBorder(null);
        lblErrorMsgPrice.setText(null);
        lblErrorMsgFlatStatus.setText(null);
    }//GEN-LAST:event_lblResetMouseClicked

    /**
     * Checks whether a flat with the same flat ID already exists in the list.
     *
     * @param flat the flatModel object to check for duplicates
     * @return true if a duplicate is found, false otherwise
     */
    private boolean checkDuplicateFlat(FlatModel flat) {
        for (FlatModel existingFlat : flatList) {
            if (existingFlat.getFlatId() == flat.getFlatId()) {
                return true; // Duplicate found
            }
        }
        return false; // No duplicate found
    }

    /**
     * Clears all input fields in the flat form. Resets each field's value to
     * default
     */
    private void clearForm() {
        txtFldFlatId.setText("");
        txtFldPrice.setText("");
        txtFldSize.setText("");
        cmBxFurnishing.setSelectedIndex(0);
        btnGrpFlatStatus.clearSelection();
        sldLivingRoom.setValue(1);
        sldBedroom.setValue(1);
        sldKitchen.setValue(1);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageFlat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageFlat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageFlat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageFlat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageFlat().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.ButtonGroup btnGrpFlatStatus;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmBxFurnishing;
    private javax.swing.JLabel lblBedroom;
    private javax.swing.JLabel lblColonFlatId;
    private javax.swing.JLabel lblColonPrice;
    private javax.swing.JLabel lblColonSize;
    private javax.swing.JLabel lblErrorMsgFlatId;
    private javax.swing.JLabel lblErrorMsgFlatStatus;
    private javax.swing.JLabel lblErrorMsgPrice;
    private javax.swing.JLabel lblErrorMsgSize;
    private javax.swing.JLabel lblFlatId;
    private javax.swing.JLabel lblFlatStatus;
    private javax.swing.JLabel lblFurnishing;
    private javax.swing.JLabel lblKitchen;
    private javax.swing.JLabel lblLivingRoom;
    private javax.swing.JLabel lblMangeFlatClose;
    private javax.swing.JLabel lblMangeFlatTitle;
    private javax.swing.JLabel lblMenuBackgroundImage;
    private javax.swing.JLabel lblMenuDashboardIcon;
    private javax.swing.JLabel lblMenuDashboardTitle;
    private javax.swing.JLabel lblMenuHomeIcon;
    private javax.swing.JLabel lblMenuHomeTitle;
    private javax.swing.JLabel lblMenuManageCleaningLog;
    private javax.swing.JLabel lblMenuManageCleaningLogIcon;
    private javax.swing.JLabel lblMenuManageFlatIcon;
    private javax.swing.JLabel lblMenuManageFlatTitle;
    private javax.swing.JLabel lblMenuManageLeftBoder;
    private javax.swing.JLabel lblMenuManageRightBoder;
    private javax.swing.JLabel lblMenuManageTenantIcon;
    private javax.swing.JLabel lblMenuManageTenantTitle;
    private javax.swing.JLabel lblMenuManageTitle;
    private javax.swing.JLabel lblMenuSettingLeftBoder;
    private javax.swing.JLabel lblMenuSettingLogoutIcon;
    private javax.swing.JLabel lblMenuSettingLogoutTitle;
    private javax.swing.JLabel lblMenuSettingRightBoder;
    private javax.swing.JLabel lblMenuSettingTitle;
    private javax.swing.JLabel lblMenuSortAndSearchFlatIcon;
    private javax.swing.JLabel lblMenuSortAndSearchFlatTitle;
    private javax.swing.JLabel lblMenuSortAndSearchLeftBoder;
    private javax.swing.JLabel lblMenuSortAndSearchRightBoder;
    private javax.swing.JLabel lblMenuSortAndSearchTenantIcon;
    private javax.swing.JLabel lblMenuSortAndSearchTenantTitle;
    private javax.swing.JLabel lblMenuSortAndSearchTitle;
    private javax.swing.JLabel lblMenuTitle;
    private javax.swing.JLabel lblMenuTitleBoder;
    private javax.swing.JLabel lblMenuTitleIcon;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lblReset;
    private javax.swing.JLabel lblSize;
    private javax.swing.JLabel lblSqFt;
    private javax.swing.JLabel lblViewFlatDetails;
    private javax.swing.JPanel pnlManageFlatMain;
    private javax.swing.JPanel pnlMenu;
    private javax.swing.JPanel pnlMenuDashboard;
    private javax.swing.JPanel pnlMenuHome;
    private javax.swing.JPanel pnlMenuManageCleaningLog;
    private javax.swing.JPanel pnlMenuManageFlat;
    private javax.swing.JPanel pnlMenuManageTenant;
    private javax.swing.JPanel pnlMenuSettingLogout;
    private javax.swing.JPanel pnlMenuSortAndSearchFlat;
    private javax.swing.JPanel pnlMenuSortAndSearchTenant;
    private javax.swing.JRadioButton rdoBtnAvailable;
    private javax.swing.JRadioButton rdoBtnNotAvailable;
    private javax.swing.JScrollPane scrlpnMangeFlatTable;
    private javax.swing.JSlider sldBedroom;
    private javax.swing.JSlider sldKitchen;
    private javax.swing.JSlider sldLivingRoom;
    private javax.swing.JTable tblManageFlat;
    private javax.swing.JTextField txtFldFlatId;
    private javax.swing.JTextField txtFldPrice;
    private javax.swing.JTextField txtFldSize;
    // End of variables declaration//GEN-END:variables

}
